{"ast":null,"code":"import React,{useMemo}from'react';import{useFinancial}from'../../contexts/FinancialContext';import{DashboardHeader}from'./DashboardHeader';import{KPISection}from'./KPISection';import{AccountOverview}from'./AccountOverview';import{RecentActivity}from'./RecentActivity';import{AccountDetail}from'../accounts/AccountDetail';import{DEFAULT_PERIODS}from'../../constants/financial';import{Button}from'../ui/Button';import{Building,Plus,Calculator,Target,PieChart,Upload,Download}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Dashboard=()=>{const{state,totalBalance,summary,selectAccount,changeScreen,viewAccountDetail,accountFilter,changePeriod}=useFinancial();const hasAccounts=state.accounts.length>0;const isLoading=state.isLoading;// Filter accounts based on accountFilter\nconst filteredAccounts=useMemo(()=>{return state.accounts.filter(account=>{if(accountFilter==='both')return true;if(accountFilter==='personal')return!account.type.includes('BUSINESS');if(accountFilter==='business')return account.type.includes('BUSINESS');return true;});},[state.accounts,accountFilter]);// Calculate filtered total balance\nconst filteredTotalBalance=useMemo(()=>{return filteredAccounts.reduce((sum,account)=>sum+account.balance,0);},[filteredAccounts]);// Calculate filtered summary\nconst filteredSummary=useMemo(()=>{const filteredTransactions=filteredAccounts.flatMap(acc=>acc.transactions||[]);const totalBalance=filteredTotalBalance;const today=new Date();let startDate;let periodLabel;// Calculate period boundaries based on selectedPeriod\nswitch(state.selectedPeriod){case'day':startDate=new Date(today.getFullYear(),today.getMonth(),today.getDate());periodLabel='daily';break;case'week':const dayOfWeek=today.getDay();const daysToSubtract=dayOfWeek===0?6:dayOfWeek-1;startDate=new Date(today.getFullYear(),today.getMonth(),today.getDate()-daysToSubtract);periodLabel='weekly';break;case'month':startDate=new Date(today.getFullYear(),today.getMonth(),1);periodLabel='monthly';break;case'quarter':const currentQuarter=Math.floor(today.getMonth()/3);startDate=new Date(today.getFullYear(),currentQuarter*3,1);periodLabel='quarterly';break;case'year':startDate=new Date(today.getFullYear(),0,1);periodLabel='yearly';break;case'5year':startDate=new Date(today.getFullYear()-5,0,1);periodLabel='5-year';break;case'custom':if(state.customDateRange){startDate=new Date(state.customDateRange.startDate);periodLabel='custom';}else{startDate=new Date(today.getFullYear(),today.getMonth(),1);periodLabel='monthly';}break;default:startDate=new Date(today.getFullYear(),today.getMonth(),1);periodLabel='monthly';}const endDate=new Date();// Filter transactions for the selected period\nconst periodTransactions=filteredTransactions.filter(txn=>{const txnDate=new Date(txn.date);return txnDate>=startDate&&txnDate<=endDate;});const periodIncome=periodTransactions.filter(txn=>txn.amount>0).reduce((sum,txn)=>sum+txn.amount,0);const periodExpenses=Math.abs(periodTransactions.filter(txn=>txn.amount<0).reduce((sum,txn)=>sum+txn.amount,0));const savingsRate=periodIncome>0?(periodIncome-periodExpenses)/periodIncome:0;// Calculate previous period for comparison\nlet prevStartDate;switch(state.selectedPeriod){case'day':prevStartDate=new Date(today.getFullYear(),today.getMonth(),today.getDate()-1);break;case'week':prevStartDate=new Date(today.getFullYear(),today.getMonth(),today.getDate()-7);break;case'month':prevStartDate=new Date(today.getFullYear(),today.getMonth()-1,1);break;case'quarter':const prevQuarter=Math.floor(today.getMonth()/3)-1;prevStartDate=prevQuarter>=0?new Date(today.getFullYear(),prevQuarter*3,1):new Date(today.getFullYear()-1,9,1);break;case'year':prevStartDate=new Date(today.getFullYear()-1,0,1);break;case'5year':prevStartDate=new Date(today.getFullYear()-10,0,1);break;default:prevStartDate=new Date(today.getFullYear(),today.getMonth()-1,1);}const prevEndDate=new Date(startDate.getTime()-1);const prevPeriodTransactions=filteredTransactions.filter(txn=>{const txnDate=new Date(txn.date);return txnDate>=prevStartDate&&txnDate<=prevEndDate;});const prevPeriodIncome=prevPeriodTransactions.filter(txn=>txn.amount>0).reduce((sum,txn)=>sum+txn.amount,0);const prevPeriodExpenses=Math.abs(prevPeriodTransactions.filter(txn=>txn.amount<0).reduce((sum,txn)=>sum+txn.amount,0));return{totalBalance,monthlyIncome:Math.round(periodIncome*100)/100,monthlyExpenses:Math.round(periodExpenses*100)/100,netWorth:totalBalance,debtToIncomeRatio:periodIncome>0?periodExpenses/periodIncome:0,savingsRate:Math.max(0,savingsRate),previousPeriodIncome:prevPeriodIncome,previousPeriodExpenses:prevPeriodExpenses,periodLabel};},[filteredAccounts,filteredTotalBalance,state.selectedPeriod,state.customDateRange]);// Generate actual trend data based on selected period\nconst generateTrendData=useMemo(()=>{const filteredTransactions=filteredAccounts.flatMap(acc=>acc.transactions||[]);const today=new Date();// Determine number of data points based on period\nlet dataPoints;let intervalDays;switch(state.selectedPeriod){case'day':dataPoints=24;// Hourly data for the day\nintervalDays=1/24;break;case'week':dataPoints=7;// Daily data for the week\nintervalDays=1;break;case'month':dataPoints=30;// Daily data for the month\nintervalDays=1;break;case'quarter':dataPoints=13;// Weekly data for the quarter\nintervalDays=7;break;case'year':dataPoints=12;// Monthly data for the year\nintervalDays=30;break;case'5year':dataPoints=60;// Monthly data for 5 years\nintervalDays=30;break;default:dataPoints=30;intervalDays=1;}// Generate trend data for balance over time\nconst balanceTrend=[];for(let i=dataPoints-1;i>=0;i--){const targetDate=new Date(today);targetDate.setDate(today.getDate()-i*intervalDays);// Calculate balance up to this point in time\nconst transactionsUpToDate=filteredTransactions.filter(txn=>{const txnDate=new Date(txn.date);return txnDate<=targetDate;});const balanceAtDate=filteredAccounts.reduce((sum,account)=>{return sum+account.balance;},0)+transactionsUpToDate.reduce((sum,txn)=>sum+txn.amount,0);balanceTrend.push(Math.max(0,balanceAtDate));// Ensure non-negative for display\n}// Generate trend data for income over time\nconst incomeTrend=[];for(let i=dataPoints-1;i>=0;i--){const targetDate=new Date(today);targetDate.setDate(today.getDate()-i*intervalDays);const startDate=new Date(targetDate);startDate.setDate(targetDate.getDate()-intervalDays);const periodTransactions=filteredTransactions.filter(txn=>{const txnDate=new Date(txn.date);return txnDate>=startDate&&txnDate<=targetDate&&txn.amount>0;});const periodIncome=periodTransactions.reduce((sum,txn)=>sum+txn.amount,0);incomeTrend.push(periodIncome);}// Generate trend data for expenses over time\nconst expenseTrend=[];for(let i=dataPoints-1;i>=0;i--){const targetDate=new Date(today);targetDate.setDate(today.getDate()-i*intervalDays);const startDate=new Date(targetDate);startDate.setDate(targetDate.getDate()-intervalDays);const periodTransactions=filteredTransactions.filter(txn=>{const txnDate=new Date(txn.date);return txnDate>=startDate&&txnDate<=targetDate&&txn.amount<0;});const periodExpenses=Math.abs(periodTransactions.reduce((sum,txn)=>sum+txn.amount,0));expenseTrend.push(periodExpenses);}// Generate trend data for savings rate over time\nconst savingsTrend=[];for(let i=dataPoints-1;i>=0;i--){const targetDate=new Date(today);targetDate.setDate(today.getDate()-i*intervalDays);const startDate=new Date(targetDate);startDate.setDate(targetDate.getDate()-intervalDays);const periodTransactions=filteredTransactions.filter(txn=>{const txnDate=new Date(txn.date);return txnDate>=startDate&&txnDate<=targetDate;});const periodIncome=periodTransactions.filter(txn=>txn.amount>0).reduce((sum,txn)=>sum+txn.amount,0);const periodExpenses=Math.abs(periodTransactions.filter(txn=>txn.amount<0).reduce((sum,txn)=>sum+txn.amount,0));const savingsRate=periodIncome>0?(periodIncome-periodExpenses)/periodIncome:0;savingsTrend.push(Math.max(0,savingsRate*100));// Convert to percentage\n}return{balance:balanceTrend,income:incomeTrend,expenses:expenseTrend,savings:savingsTrend};},[filteredAccounts,state.selectedPeriod]);// Add routing logic for account-detail screen\nif(state.currentScreen==='account-detail'){return/*#__PURE__*/_jsx(AccountDetail,{});}// Loading state\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-gray-600\",children:\"Loading your financial data...\"})]})});}// Empty state - no accounts connected\nif(!hasAccounts){return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(DashboardHeader,{}),/*#__PURE__*/_jsxs(\"main\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(Building,{className:\"w-16 h-16 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-4\",children:\"Welcome to FinanceApp\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-8 max-w-md mx-auto\",children:\"Connect your bank accounts to get started with smart financial management. We'll help you track spending, categorize transactions, and gain insights into your financial health.\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>alert('Bank connection coming soon!'),children:\"Connect Your First Account\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-16 grid grid-cols-1 md:grid-cols-3 gap-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-4\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl\",children:\"\\uD83D\\uDCCA\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-2\",children:\"Smart Analytics\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Get insights into your spending patterns and financial trends with interactive charts and KPIs.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-4\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl\",children:\"\\uD83C\\uDFF7\\uFE0F\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-2\",children:\"Auto-Tagging\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Automatically categorize transactions with AI-powered merchant recognition and smart tagging.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mx-auto mb-4\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl\",children:\"\\uD83D\\uDD12\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-2\",children:\"Bank-Level Security\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Your data is protected with 256-bit encryption and industry-leading security practices.\"})]})]})]})]});}// Main dashboard with data\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(DashboardHeader,{}),/*#__PURE__*/_jsxs(\"main\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:[state.error&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"h-5 w-5 text-red-400\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\",clipRule:\"evenodd\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-red-800\",children:state.error})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center mb-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-1 bg-gray-100 rounded-lg p-1\",children:DEFAULT_PERIODS.map(period=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(period==='custom'){// Handle custom date picker\nalert('Custom date picker coming soon!');}else{changePeriod(period);}},className:`px-3 py-1.5 rounded-md text-sm font-medium transition-all ${state.selectedPeriod===period?'bg-white shadow-sm text-blue-600':'text-gray-600 hover:text-gray-800'}`,children:period==='day'?'D':period==='week'?'W':period==='month'?'M':period==='quarter'?'Q':period==='year'?'Y':period==='5year'?'5Y':period==='custom'?'Custom':period},period))})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(KPISection,{summary:filteredSummary,totalBalance:filteredTotalBalance,period:state.selectedPeriod,balanceTrend:generateTrendData.balance,incomeTrend:generateTrendData.income,expenseTrend:generateTrendData.expenses,savingsTrend:generateTrendData.savings})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-sm border h-full flex flex-col\",children:/*#__PURE__*/_jsx(AccountOverview,{accounts:state.accounts,onAccountSelect:account=>{viewAccountDetail(account);},accountFilter:accountFilter})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-sm border p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 md:grid-cols-3 gap-4\",children:[{icon:Plus,label:'Add Transaction',color:'bg-blue-500'},{icon:Upload,label:'Import CSV',color:'bg-green-500'},{icon:Target,label:'Set Budget',color:'bg-purple-500'},{icon:Calculator,label:'Calculator',color:'bg-orange-500'},{icon:PieChart,label:'Generate Report',color:'bg-pink-500'},{icon:Download,label:'Export Data',color:'bg-gray-500'}].map((action,index)=>/*#__PURE__*/_jsxs(\"button\",{className:\"group p-4 rounded-lg border border-gray-200 hover:border-gray-300 hover:shadow-sm transition-all text-left\",onClick:()=>alert(`${action.label} coming soon!`),children:[/*#__PURE__*/_jsx(\"div\",{className:`w-10 h-10 rounded-lg ${action.color} flex items-center justify-center mb-3 group-hover:scale-105 transition-transform`,children:/*#__PURE__*/_jsx(action.icon,{className:\"w-5 h-5 text-white\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 mb-1\",children:action.label})})]},index))})}),/*#__PURE__*/_jsx(RecentActivity,{accounts:filteredAccounts,limit:5})]})]})]})]});};","map":{"version":3,"names":["React","useMemo","useFinancial","DashboardHeader","KPISection","AccountOverview","RecentActivity","AccountDetail","DEFAULT_PERIODS","Button","Building","Plus","Calculator","Target","PieChart","Upload","Download","jsx","_jsx","jsxs","_jsxs","Dashboard","state","totalBalance","summary","selectAccount","changeScreen","viewAccountDetail","accountFilter","changePeriod","hasAccounts","accounts","length","isLoading","filteredAccounts","filter","account","type","includes","filteredTotalBalance","reduce","sum","balance","filteredSummary","filteredTransactions","flatMap","acc","transactions","today","Date","startDate","periodLabel","selectedPeriod","getFullYear","getMonth","getDate","dayOfWeek","getDay","daysToSubtract","currentQuarter","Math","floor","customDateRange","endDate","periodTransactions","txn","txnDate","date","periodIncome","amount","periodExpenses","abs","savingsRate","prevStartDate","prevQuarter","prevEndDate","getTime","prevPeriodTransactions","prevPeriodIncome","prevPeriodExpenses","monthlyIncome","round","monthlyExpenses","netWorth","debtToIncomeRatio","max","previousPeriodIncome","previousPeriodExpenses","generateTrendData","dataPoints","intervalDays","balanceTrend","i","targetDate","setDate","transactionsUpToDate","balanceAtDate","push","incomeTrend","expenseTrend","savingsTrend","income","expenses","savings","currentScreen","className","children","onClick","alert","error","viewBox","fill","fillRule","d","clipRule","map","period","onAccountSelect","icon","label","color","action","index","limit"],"sources":["C:/Users/dliz1/Desktop/FinanceApp/src/components/dashboard/Dashboard.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { useFinancial } from '../../contexts/FinancialContext';\r\nimport { Account, Transaction } from '../../types/financial';\r\nimport { DashboardHeader } from './DashboardHeader';\r\nimport { KPISection } from './KPISection';\r\nimport { AccountOverview } from './AccountOverview';\r\nimport { RecentActivity } from './RecentActivity';\r\nimport { AccountDetail } from '../accounts/AccountDetail';\r\nimport { DEFAULT_PERIODS } from '../../constants/financial';\r\nimport { Button } from '../ui/Button';\r\nimport {\r\n  Building,\r\n  Plus,\r\n  Calculator,\r\n  Target,\r\n  PieChart,\r\n  Upload,\r\n  Download,\r\n} from 'lucide-react';\r\n\r\nexport const Dashboard: React.FC = () => {\r\n  const { \r\n    state, \r\n    totalBalance, \r\n    summary, \r\n    selectAccount,\r\n    changeScreen,\r\n    viewAccountDetail,\r\n    accountFilter,\r\n    changePeriod\r\n  } = useFinancial();\r\n\r\n  const hasAccounts = state.accounts.length > 0;\r\n  const isLoading = state.isLoading;\r\n\r\n  // Filter accounts based on accountFilter\r\n  const filteredAccounts = useMemo(() => {\r\n    return state.accounts.filter((account: Account) => {\r\n      if (accountFilter === 'both') return true;\r\n      if (accountFilter === 'personal') return !account.type.includes('BUSINESS');\r\n      if (accountFilter === 'business') return account.type.includes('BUSINESS');\r\n      return true;\r\n    });\r\n  }, [state.accounts, accountFilter]);\r\n\r\n  // Calculate filtered total balance\r\n  const filteredTotalBalance = useMemo(() => {\r\n    return filteredAccounts.reduce((sum: number, account: Account) => sum + account.balance, 0);\r\n  }, [filteredAccounts]);\r\n\r\n  // Calculate filtered summary\r\n  const filteredSummary = useMemo(() => {\r\n    const filteredTransactions = filteredAccounts.flatMap((acc: Account) => acc.transactions || []);\r\n    const totalBalance = filteredTotalBalance;\r\n    \r\n    const today = new Date();\r\n    let startDate: Date;\r\n    let periodLabel: string;\r\n\r\n    // Calculate period boundaries based on selectedPeriod\r\n    switch (state.selectedPeriod) {\r\n      case 'day':\r\n        startDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n        periodLabel = 'daily';\r\n        break;\r\n      case 'week':\r\n        const dayOfWeek = today.getDay();\r\n        const daysToSubtract = dayOfWeek === 0 ? 6 : dayOfWeek - 1;\r\n        startDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - daysToSubtract);\r\n        periodLabel = 'weekly';\r\n        break;\r\n      case 'month':\r\n        startDate = new Date(today.getFullYear(), today.getMonth(), 1);\r\n        periodLabel = 'monthly';\r\n        break;\r\n      case 'quarter':\r\n        const currentQuarter = Math.floor(today.getMonth() / 3);\r\n        startDate = new Date(today.getFullYear(), currentQuarter * 3, 1);\r\n        periodLabel = 'quarterly';\r\n        break;\r\n      case 'year':\r\n        startDate = new Date(today.getFullYear(), 0, 1);\r\n        periodLabel = 'yearly';\r\n        break;\r\n      case '5year':\r\n        startDate = new Date(today.getFullYear() - 5, 0, 1);\r\n        periodLabel = '5-year';\r\n        break;\r\n      case 'custom':\r\n        if (state.customDateRange) {\r\n          startDate = new Date(state.customDateRange.startDate);\r\n          periodLabel = 'custom';\r\n        } else {\r\n          startDate = new Date(today.getFullYear(), today.getMonth(), 1);\r\n          periodLabel = 'monthly';\r\n        }\r\n        break;\r\n      default:\r\n        startDate = new Date(today.getFullYear(), today.getMonth(), 1);\r\n        periodLabel = 'monthly';\r\n    }\r\n\r\n    const endDate = new Date();\r\n\r\n    // Filter transactions for the selected period\r\n    const periodTransactions = filteredTransactions.filter((txn: Transaction) => {\r\n      const txnDate = new Date(txn.date);\r\n      return txnDate >= startDate && txnDate <= endDate;\r\n    });\r\n\r\n    const periodIncome = periodTransactions\r\n      .filter((txn: Transaction) => txn.amount > 0)\r\n      .reduce((sum: number, txn: Transaction) => sum + txn.amount, 0);\r\n\r\n    const periodExpenses = Math.abs(\r\n      periodTransactions\r\n        .filter((txn: Transaction) => txn.amount < 0)\r\n        .reduce((sum: number, txn: Transaction) => sum + txn.amount, 0)\r\n    );\r\n\r\n    const savingsRate = periodIncome > 0 ? (periodIncome - periodExpenses) / periodIncome : 0;\r\n\r\n    // Calculate previous period for comparison\r\n    let prevStartDate: Date;\r\n    switch (state.selectedPeriod) {\r\n      case 'day':\r\n        prevStartDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1);\r\n        break;\r\n      case 'week':\r\n        prevStartDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);\r\n        break;\r\n      case 'month':\r\n        prevStartDate = new Date(today.getFullYear(), today.getMonth() - 1, 1);\r\n        break;\r\n      case 'quarter':\r\n        const prevQuarter = Math.floor(today.getMonth() / 3) - 1;\r\n        prevStartDate = prevQuarter >= 0 ? new Date(today.getFullYear(), prevQuarter * 3, 1) : new Date(today.getFullYear() - 1, 9, 1);\r\n        break;\r\n      case 'year':\r\n        prevStartDate = new Date(today.getFullYear() - 1, 0, 1);\r\n        break;\r\n      case '5year':\r\n        prevStartDate = new Date(today.getFullYear() - 10, 0, 1);\r\n        break;\r\n      default:\r\n        prevStartDate = new Date(today.getFullYear(), today.getMonth() - 1, 1);\r\n    }\r\n\r\n    const prevEndDate = new Date(startDate.getTime() - 1);\r\n    const prevPeriodTransactions = filteredTransactions.filter((txn: Transaction) => {\r\n      const txnDate = new Date(txn.date);\r\n      return txnDate >= prevStartDate && txnDate <= prevEndDate;\r\n    });\r\n\r\n    const prevPeriodIncome = prevPeriodTransactions\r\n      .filter((txn: Transaction) => txn.amount > 0)\r\n      .reduce((sum: number, txn: Transaction) => sum + txn.amount, 0);\r\n\r\n    const prevPeriodExpenses = Math.abs(\r\n      prevPeriodTransactions\r\n        .filter((txn: Transaction) => txn.amount < 0)\r\n        .reduce((sum: number, txn: Transaction) => sum + txn.amount, 0)\r\n    );\r\n\r\n    return {\r\n      totalBalance,\r\n      monthlyIncome: Math.round(periodIncome * 100) / 100,\r\n      monthlyExpenses: Math.round(periodExpenses * 100) / 100,\r\n      netWorth: totalBalance,\r\n      debtToIncomeRatio: periodIncome > 0 ? periodExpenses / periodIncome : 0,\r\n      savingsRate: Math.max(0, savingsRate),\r\n      previousPeriodIncome: prevPeriodIncome,\r\n      previousPeriodExpenses: prevPeriodExpenses,\r\n      periodLabel,\r\n    };\r\n  }, [filteredAccounts, filteredTotalBalance, state.selectedPeriod, state.customDateRange]);\r\n\r\n  // Generate actual trend data based on selected period\r\n  const generateTrendData = useMemo(() => {\r\n    const filteredTransactions = filteredAccounts.flatMap((acc: Account) => acc.transactions || []);\r\n    const today = new Date();\r\n    \r\n    // Determine number of data points based on period\r\n    let dataPoints: number;\r\n    let intervalDays: number;\r\n    \r\n    switch (state.selectedPeriod) {\r\n      case 'day':\r\n        dataPoints = 24; // Hourly data for the day\r\n        intervalDays = 1/24;\r\n        break;\r\n      case 'week':\r\n        dataPoints = 7; // Daily data for the week\r\n        intervalDays = 1;\r\n        break;\r\n      case 'month':\r\n        dataPoints = 30; // Daily data for the month\r\n        intervalDays = 1;\r\n        break;\r\n      case 'quarter':\r\n        dataPoints = 13; // Weekly data for the quarter\r\n        intervalDays = 7;\r\n        break;\r\n      case 'year':\r\n        dataPoints = 12; // Monthly data for the year\r\n        intervalDays = 30;\r\n        break;\r\n      case '5year':\r\n        dataPoints = 60; // Monthly data for 5 years\r\n        intervalDays = 30;\r\n        break;\r\n      default:\r\n        dataPoints = 30;\r\n        intervalDays = 1;\r\n    }\r\n\r\n    // Generate trend data for balance over time\r\n    const balanceTrend = [];\r\n    for (let i = dataPoints - 1; i >= 0; i--) {\r\n      const targetDate = new Date(today);\r\n      targetDate.setDate(today.getDate() - (i * intervalDays));\r\n      \r\n      // Calculate balance up to this point in time\r\n      const transactionsUpToDate = filteredTransactions.filter((txn: Transaction) => {\r\n        const txnDate = new Date(txn.date);\r\n        return txnDate <= targetDate;\r\n      });\r\n      \r\n      const balanceAtDate = filteredAccounts.reduce((sum: number, account: Account) => {\r\n        return sum + account.balance;\r\n      }, 0) + transactionsUpToDate.reduce((sum: number, txn: Transaction) => sum + txn.amount, 0);\r\n      \r\n      balanceTrend.push(Math.max(0, balanceAtDate)); // Ensure non-negative for display\r\n    }\r\n\r\n    // Generate trend data for income over time\r\n    const incomeTrend = [];\r\n    for (let i = dataPoints - 1; i >= 0; i--) {\r\n      const targetDate = new Date(today);\r\n      targetDate.setDate(today.getDate() - (i * intervalDays));\r\n      \r\n      const startDate = new Date(targetDate);\r\n      startDate.setDate(targetDate.getDate() - intervalDays);\r\n      \r\n      const periodTransactions = filteredTransactions.filter((txn: Transaction) => {\r\n        const txnDate = new Date(txn.date);\r\n        return txnDate >= startDate && txnDate <= targetDate && txn.amount > 0;\r\n      });\r\n      \r\n      const periodIncome = periodTransactions.reduce((sum: number, txn: Transaction) => sum + txn.amount, 0);\r\n      incomeTrend.push(periodIncome);\r\n    }\r\n\r\n    // Generate trend data for expenses over time\r\n    const expenseTrend = [];\r\n    for (let i = dataPoints - 1; i >= 0; i--) {\r\n      const targetDate = new Date(today);\r\n      targetDate.setDate(today.getDate() - (i * intervalDays));\r\n      \r\n      const startDate = new Date(targetDate);\r\n      startDate.setDate(targetDate.getDate() - intervalDays);\r\n      \r\n      const periodTransactions = filteredTransactions.filter((txn: Transaction) => {\r\n        const txnDate = new Date(txn.date);\r\n        return txnDate >= startDate && txnDate <= targetDate && txn.amount < 0;\r\n      });\r\n      \r\n      const periodExpenses = Math.abs(periodTransactions.reduce((sum: number, txn: Transaction) => sum + txn.amount, 0));\r\n      expenseTrend.push(periodExpenses);\r\n    }\r\n\r\n    // Generate trend data for savings rate over time\r\n    const savingsTrend = [];\r\n    for (let i = dataPoints - 1; i >= 0; i--) {\r\n      const targetDate = new Date(today);\r\n      targetDate.setDate(today.getDate() - (i * intervalDays));\r\n      \r\n      const startDate = new Date(targetDate);\r\n      startDate.setDate(targetDate.getDate() - intervalDays);\r\n      \r\n      const periodTransactions = filteredTransactions.filter((txn: Transaction) => {\r\n        const txnDate = new Date(txn.date);\r\n        return txnDate >= startDate && txnDate <= targetDate;\r\n      });\r\n      \r\n      const periodIncome = periodTransactions\r\n        .filter((txn: Transaction) => txn.amount > 0)\r\n        .reduce((sum: number, txn: Transaction) => sum + txn.amount, 0);\r\n      \r\n      const periodExpenses = Math.abs(\r\n        periodTransactions\r\n          .filter((txn: Transaction) => txn.amount < 0)\r\n          .reduce((sum: number, txn: Transaction) => sum + txn.amount, 0)\r\n      );\r\n      \r\n      const savingsRate = periodIncome > 0 ? (periodIncome - periodExpenses) / periodIncome : 0;\r\n      savingsTrend.push(Math.max(0, savingsRate * 100)); // Convert to percentage\r\n    }\r\n\r\n    return {\r\n      balance: balanceTrend,\r\n      income: incomeTrend,\r\n      expenses: expenseTrend,\r\n      savings: savingsTrend,\r\n    };\r\n  }, [filteredAccounts, state.selectedPeriod]);\r\n\r\n  // Add routing logic for account-detail screen\r\n  if (state.currentScreen === 'account-detail') {\r\n    return <AccountDetail />;\r\n  }\r\n\r\n  // Loading state\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading your financial data...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Empty state - no accounts connected\r\n  if (!hasAccounts) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50\">\r\n        <DashboardHeader />\r\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center py-12\">\r\n            <Building className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n              Welcome to FinanceApp\r\n            </h2>\r\n            <p className=\"text-gray-600 mb-8 max-w-md mx-auto\">\r\n              Connect your bank accounts to get started with smart financial\r\n              management. We'll help you track spending, categorize\r\n              transactions, and gain insights into your financial health.\r\n            </p>\r\n            <Button onClick={() => alert('Bank connection coming soon!')}>\r\n              Connect Your First Account\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Feature Preview */}\r\n          <div className=\"mt-16 grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n            <div className=\"text-center\">\r\n              <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\r\n                <span className=\"text-2xl\">📊</span>\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                Smart Analytics\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                Get insights into your spending patterns and financial trends\r\n                with interactive charts and KPIs.\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\r\n                <span className=\"text-2xl\">🏷️</span>\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                Auto-Tagging\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                Automatically categorize transactions with AI-powered merchant\r\n                recognition and smart tagging.\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\r\n                <span className=\"text-2xl\">🔒</span>\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                Bank-Level Security\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                Your data is protected with 256-bit encryption and\r\n                industry-leading security practices.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main dashboard with data\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <DashboardHeader />\r\n\r\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Error Display */}\r\n        {state.error && (\r\n          <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\r\n            <div className=\"flex\">\r\n              <div className=\"flex-shrink-0\">\r\n                <svg\r\n                  className=\"h-5 w-5 text-red-400\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm text-red-800\">{state.error}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Period Selector - Centered above KPI Section */}\r\n        <div className=\"flex justify-center mb-6\">\r\n          <div className=\"flex items-center space-x-1 bg-gray-100 rounded-lg p-1\">\r\n            {DEFAULT_PERIODS.map((period) => (\r\n              <button\r\n                key={period}\r\n                onClick={() => {\r\n                  if (period === 'custom') {\r\n                    // Handle custom date picker\r\n                    alert('Custom date picker coming soon!');\r\n                  } else {\r\n                    changePeriod(period as any);\r\n                  }\r\n                }}\r\n                className={`px-3 py-1.5 rounded-md text-sm font-medium transition-all ${\r\n                  state.selectedPeriod === period\r\n                    ? 'bg-white shadow-sm text-blue-600'\r\n                    : 'text-gray-600 hover:text-gray-800'\r\n                }`}\r\n              >\r\n                {period === 'day' ? 'D' : \r\n                 period === 'week' ? 'W' : \r\n                 period === 'month' ? 'M' : \r\n                 period === 'quarter' ? 'Q' : \r\n                 period === 'year' ? 'Y' : \r\n                 period === '5year' ? '5Y' : \r\n                 period === 'custom' ? 'Custom' : \r\n                 period}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* KPI Section */}\r\n        <div className=\"mb-6\">\r\n          <KPISection\r\n            summary={filteredSummary}\r\n            totalBalance={filteredTotalBalance}\r\n            period={state.selectedPeriod}\r\n            balanceTrend={generateTrendData.balance}\r\n            incomeTrend={generateTrendData.income}\r\n            expenseTrend={generateTrendData.expenses}\r\n            savingsTrend={generateTrendData.savings}\r\n          />\r\n        </div>\r\n\r\n        {/* Main Content Grid */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\r\n          {/* Left Column - Account Overview */}\r\n          <div className=\"flex flex-col\">\r\n            <div className=\"bg-white rounded-lg shadow-sm border h-full flex flex-col\">\r\n              <AccountOverview\r\n                accounts={state.accounts}\r\n                onAccountSelect={(account) => {\r\n                  viewAccountDetail(account);\r\n                }}\r\n                accountFilter={accountFilter}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right Column - Quick Actions + Recent Activity */}\r\n          <div className=\"space-y-8\">\r\n            {/* Quick Actions */}\r\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n\r\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n                {[\r\n                  {\r\n                    icon: Plus,\r\n                    label: 'Add Transaction',\r\n                    color: 'bg-blue-500',\r\n                  },\r\n                  { icon: Upload, label: 'Import CSV', color: 'bg-green-500' },\r\n                  { icon: Target, label: 'Set Budget', color: 'bg-purple-500' },\r\n                  {\r\n                    icon: Calculator,\r\n                    label: 'Calculator',\r\n                    color: 'bg-orange-500',\r\n                  },\r\n                  {\r\n                    icon: PieChart,\r\n                    label: 'Generate Report',\r\n                    color: 'bg-pink-500',\r\n                  },\r\n                  {\r\n                    icon: Download,\r\n                    label: 'Export Data',\r\n                    color: 'bg-gray-500',\r\n                  },\r\n                ].map((action, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className=\"group p-4 rounded-lg border border-gray-200 hover:border-gray-300 hover:shadow-sm transition-all text-left\"\r\n                    onClick={() => alert(`${action.label} coming soon!`)}\r\n                  >\r\n                    <div\r\n                      className={`w-10 h-10 rounded-lg ${action.color} flex items-center justify-center mb-3 group-hover:scale-105 transition-transform`}\r\n                    >\r\n                      <action.icon className=\"w-5 h-5 text-white\" />\r\n                    </div>\r\n                    <div>\r\n                      <h4 className=\"font-medium text-gray-900 mb-1\">\r\n                        {action.label}\r\n                      </h4>\r\n                    </div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Recent Activity */}\r\n            <RecentActivity accounts={filteredAccounts} limit={5} />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}