{"ast":null,"code":"// src/constants/financial.ts\n\nexport const TAG_CATEGORIES = {\n  'Food & Dining': {\n    name: 'Food & Dining',\n    color: 'bg-green-100 text-green-800',\n    icon: '🍔',\n    isSystemTag: true\n  },\n  'Groceries': {\n    name: 'Groceries',\n    color: 'bg-emerald-100 text-emerald-800',\n    icon: '🛒',\n    parentCategory: 'Food & Dining',\n    isSystemTag: true\n  },\n  'Transportation': {\n    name: 'Transportation',\n    color: 'bg-blue-100 text-blue-800',\n    icon: '⛽',\n    isSystemTag: true\n  },\n  'Shopping': {\n    name: 'Shopping',\n    color: 'bg-purple-100 text-purple-800',\n    icon: '🛍️',\n    isSystemTag: true\n  },\n  'Entertainment': {\n    name: 'Entertainment',\n    color: 'bg-pink-100 text-pink-800',\n    icon: '🎬',\n    isSystemTag: true\n  },\n  'Utilities': {\n    name: 'Utilities',\n    color: 'bg-orange-100 text-orange-800',\n    icon: '🏠',\n    isSystemTag: true\n  },\n  'Healthcare': {\n    name: 'Healthcare',\n    color: 'bg-red-100 text-red-800',\n    icon: '🏥',\n    isSystemTag: true\n  },\n  'Business': {\n    name: 'Business',\n    color: 'bg-gray-100 text-gray-800',\n    icon: '💼',\n    isSystemTag: true\n  },\n  'Income': {\n    name: 'Income',\n    color: 'bg-teal-100 text-teal-800',\n    icon: '💰',\n    isSystemTag: true\n  },\n  'Travel': {\n    name: 'Travel',\n    color: 'bg-indigo-100 text-indigo-800',\n    icon: '✈️',\n    isSystemTag: true\n  },\n  'Subscriptions': {\n    name: 'Subscriptions',\n    color: 'bg-yellow-100 text-yellow-800',\n    icon: '📱',\n    isSystemTag: true\n  },\n  'Other': {\n    name: 'Other',\n    color: 'bg-slate-100 text-slate-800',\n    icon: '📝',\n    isSystemTag: true\n  }\n};\nexport const MERCHANT_PATTERNS = {\n  'AMAZON': {\n    cleanName: 'Amazon',\n    logo: '📦',\n    suggestedCategory: 'Shopping',\n    confidence: 0.95\n  },\n  'EBAY': {\n    cleanName: 'eBay',\n    logo: '🏷️',\n    suggestedCategory: 'Shopping',\n    confidence: 0.95\n  },\n  'ETSY': {\n    cleanName: 'Etsy',\n    logo: '🎨',\n    suggestedCategory: 'Shopping',\n    confidence: 0.95\n  },\n  'STARBUCKS': {\n    cleanName: 'Starbucks',\n    logo: '☕',\n    suggestedCategory: 'Food & Dining',\n    confidence: 0.95\n  },\n  'MCDONALD': {\n    cleanName: 'McDonald\\'s',\n    logo: '🍟',\n    suggestedCategory: 'Food & Dining',\n    confidence: 0.95\n  },\n  'SUBWAY': {\n    cleanName: 'Subway',\n    logo: '🥪',\n    suggestedCategory: 'Food & Dining',\n    confidence: 0.95\n  },\n  'CHIPOTLE': {\n    cleanName: 'Chipotle',\n    logo: '🌯',\n    suggestedCategory: 'Food & Dining',\n    confidence: 0.95\n  },\n  'DOORDASH': {\n    cleanName: 'DoorDash',\n    logo: '🚚',\n    suggestedCategory: 'Food & Dining',\n    confidence: 0.95\n  },\n  'UBER EATS': {\n    cleanName: 'Uber Eats',\n    logo: '🍽️',\n    suggestedCategory: 'Food & Dining',\n    confidence: 0.95\n  },\n  'KROGER': {\n    cleanName: 'Kroger',\n    logo: '🛒',\n    suggestedCategory: 'Groceries',\n    confidence: 0.95\n  },\n  'WALMART': {\n    cleanName: 'Walmart',\n    logo: '🏪',\n    suggestedCategory: 'Groceries',\n    confidence: 0.95\n  },\n  'TARGET': {\n    cleanName: 'Target',\n    logo: '🎯',\n    suggestedCategory: 'Shopping',\n    confidence: 0.95\n  },\n  'COSTCO': {\n    cleanName: 'Costco',\n    logo: '📦',\n    suggestedCategory: 'Groceries',\n    confidence: 0.95\n  },\n  'WHOLE FOODS': {\n    cleanName: 'Whole Foods',\n    logo: '🥬',\n    suggestedCategory: 'Groceries',\n    confidence: 0.95\n  },\n  'SHELL': {\n    cleanName: 'Shell',\n    logo: '⛽',\n    suggestedCategory: 'Transportation',\n    confidence: 0.95\n  },\n  'EXXON': {\n    cleanName: 'ExxonMobil',\n    logo: '⛽',\n    suggestedCategory: 'Transportation',\n    confidence: 0.95\n  },\n  'BP': {\n    cleanName: 'BP',\n    logo: '⛽',\n    suggestedCategory: 'Transportation',\n    confidence: 0.95\n  },\n  'UBER': {\n    cleanName: 'Uber',\n    logo: '🚗',\n    suggestedCategory: 'Transportation',\n    confidence: 0.95\n  },\n  'LYFT': {\n    cleanName: 'Lyft',\n    logo: '🚙',\n    suggestedCategory: 'Transportation',\n    confidence: 0.95\n  },\n  'NETFLIX': {\n    cleanName: 'Netflix',\n    logo: '🎬',\n    suggestedCategory: 'Subscriptions',\n    confidence: 0.95\n  },\n  'SPOTIFY': {\n    cleanName: 'Spotify',\n    logo: '🎵',\n    suggestedCategory: 'Subscriptions',\n    confidence: 0.95\n  },\n  'APPLE': {\n    cleanName: 'Apple',\n    logo: '🍎',\n    suggestedCategory: 'Subscriptions',\n    confidence: 0.90\n  },\n  'GOOGLE': {\n    cleanName: 'Google',\n    logo: '🔍',\n    suggestedCategory: 'Subscriptions',\n    confidence: 0.85\n  },\n  'MICROSOFT': {\n    cleanName: 'Microsoft',\n    logo: '💻',\n    suggestedCategory: 'Subscriptions',\n    confidence: 0.90\n  },\n  'VERIZON': {\n    cleanName: 'Verizon',\n    logo: '📱',\n    suggestedCategory: 'Utilities',\n    confidence: 0.95\n  },\n  'ATT': {\n    cleanName: 'AT&T',\n    logo: '📱',\n    suggestedCategory: 'Utilities',\n    confidence: 0.95\n  },\n  'COMCAST': {\n    cleanName: 'Comcast',\n    logo: '📺',\n    suggestedCategory: 'Utilities',\n    confidence: 0.95\n  },\n  'CVS': {\n    cleanName: 'CVS Pharmacy',\n    logo: '💊',\n    suggestedCategory: 'Healthcare',\n    confidence: 0.95\n  },\n  'WALGREENS': {\n    cleanName: 'Walgreens',\n    logo: '💊',\n    suggestedCategory: 'Healthcare',\n    confidence: 0.95\n  },\n  'PAYROLL': {\n    cleanName: 'Salary',\n    logo: '💰',\n    suggestedCategory: 'Income',\n    confidence: 0.95\n  },\n  'FREELANCE': {\n    cleanName: 'Freelance Payment',\n    logo: '💼',\n    suggestedCategory: 'Income',\n    confidence: 0.90\n  },\n  'DIVIDEND': {\n    cleanName: 'Investment Dividend',\n    logo: '📈',\n    suggestedCategory: 'Income',\n    confidence: 0.95\n  },\n  'INTEREST': {\n    cleanName: 'Interest Payment',\n    logo: '🏦',\n    suggestedCategory: 'Income',\n    confidence: 0.95\n  }\n};\n\n// Mock data generator\nexport const generateMockTransactions = (accountId, count = 10) => {\n  const merchants = Object.keys(MERCHANT_PATTERNS);\n  const transactions = [];\n  for (let i = 0; i < count; i++) {\n    const merchantKey = merchants[Math.floor(Math.random() * merchants.length)];\n    const merchantInfo = MERCHANT_PATTERNS[merchantKey];\n    const isIncome = Math.random() < 0.2; // 20% chance of income\n    const amount = isIncome ? Math.random() * 2000 + 1000 // Income: $1000-$3000\n    : -(Math.random() * 200 + 10); // Expense: $10-$210\n\n    const date = new Date();\n    date.setDate(date.getDate() - Math.floor(Math.random() * 30));\n    transactions.push({\n      id: `txn_${accountId}_${i}`,\n      accountId,\n      description: `${merchantKey} #${Math.floor(Math.random() * 1000)}`,\n      amount: Math.round(amount * 100) / 100,\n      date: date.toISOString().split('T')[0],\n      category: merchantInfo.suggestedCategory,\n      tags: Math.random() > 0.5 ? [merchantInfo.suggestedCategory] : [],\n      pending: Math.random() < 0.1,\n      cleanMerchant: {\n        ...merchantInfo,\n        original: `${merchantKey} #${Math.floor(Math.random() * 1000)}`\n      },\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    });\n  }\n  return transactions.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n};\nexport const MOCK_ACCOUNTS = [{\n  id: 'acc_checking',\n  name: 'Primary Checking',\n  type: 'CHECKING',\n  balance: 2543.67,\n  accountNumber: '****1234',\n  bankName: 'Chase Bank',\n  isActive: true,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString(),\n  transactions: generateMockTransactions('acc_checking', 15)\n}, {\n  id: 'acc_savings',\n  name: 'High Yield Savings',\n  type: 'SAVINGS',\n  balance: 12750.00,\n  accountNumber: '****5678',\n  bankName: 'Ally Bank',\n  isActive: true,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString(),\n  transactions: generateMockTransactions('acc_savings', 5)\n}, {\n  id: 'acc_credit',\n  name: 'Rewards Credit Card',\n  type: 'CREDIT',\n  balance: -1247.82,\n  accountNumber: '****9012',\n  bankName: 'Chase Bank',\n  limit: 5000,\n  isActive: true,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString(),\n  transactions: generateMockTransactions('acc_credit', 12)\n}];\nexport const DEFAULT_PERIODS = ['month', 'quarter', 'year'];\nexport const VALIDATION_RULES = {\n  ACCOUNT_NAME: {\n    MIN_LENGTH: 2,\n    MAX_LENGTH: 50\n  },\n  TRANSACTION_DESCRIPTION: {\n    MIN_LENGTH: 1,\n    MAX_LENGTH: 255\n  },\n  TAG_NAME: {\n    MIN_LENGTH: 2,\n    MAX_LENGTH: 30,\n    PATTERN: /^[a-zA-Z0-9\\s&-]+$/\n  },\n  AMOUNT: {\n    MIN: -999999.99,\n    MAX: 999999.99\n  }\n};\nexport const ERROR_MESSAGES = {\n  BANK_CONNECTION_FAILED: 'Unable to connect to your bank. Please check your credentials.',\n  INVALID_CREDENTIALS: 'Invalid username or password.',\n  TRANSACTION_SYNC_ERROR: 'Failed to sync transactions. Please try again.',\n  ACCOUNT_NOT_FOUND: 'Account not found.',\n  INSUFFICIENT_PERMISSIONS: 'You don\\'t have permission to perform this action.',\n  RATE_LIMIT_EXCEEDED: 'Too many requests. Please wait and try again.',\n  VALIDATION_ERROR: 'Please check your input and try again.',\n  NETWORK_ERROR: 'Network error. Please check your connection.',\n  UNKNOWN_ERROR: 'An unexpected error occurred.'\n};","map":{"version":3,"names":["TAG_CATEGORIES","name","color","icon","isSystemTag","parentCategory","MERCHANT_PATTERNS","cleanName","logo","suggestedCategory","confidence","generateMockTransactions","accountId","count","merchants","Object","keys","transactions","i","merchantKey","Math","floor","random","length","merchantInfo","isIncome","amount","date","Date","setDate","getDate","push","id","description","round","toISOString","split","category","tags","pending","cleanMerchant","original","createdAt","updatedAt","sort","a","b","getTime","MOCK_ACCOUNTS","type","balance","accountNumber","bankName","isActive","limit","DEFAULT_PERIODS","VALIDATION_RULES","ACCOUNT_NAME","MIN_LENGTH","MAX_LENGTH","TRANSACTION_DESCRIPTION","TAG_NAME","PATTERN","AMOUNT","MIN","MAX","ERROR_MESSAGES","BANK_CONNECTION_FAILED","INVALID_CREDENTIALS","TRANSACTION_SYNC_ERROR","ACCOUNT_NOT_FOUND","INSUFFICIENT_PERMISSIONS","RATE_LIMIT_EXCEEDED","VALIDATION_ERROR","NETWORK_ERROR","UNKNOWN_ERROR"],"sources":["C:/Users/dliz1/Desktop/FinanceApp/src/constants/financial.ts"],"sourcesContent":["// src/constants/financial.ts\r\nimport { TagCategory, MerchantInfo, Account, Transaction } from '../types/financial';\r\n\r\nexport const TAG_CATEGORIES: Record<string, TagCategory> = {\r\n  'Food & Dining': {\r\n    name: 'Food & Dining',\r\n    color: 'bg-green-100 text-green-800',\r\n    icon: '🍔',\r\n    isSystemTag: true,\r\n  },\r\n  'Groceries': {\r\n    name: 'Groceries',\r\n    color: 'bg-emerald-100 text-emerald-800',\r\n    icon: '🛒',\r\n    parentCategory: 'Food & Dining',\r\n    isSystemTag: true,\r\n  },\r\n  'Transportation': {\r\n    name: 'Transportation',\r\n    color: 'bg-blue-100 text-blue-800',\r\n    icon: '⛽',\r\n    isSystemTag: true,\r\n  },\r\n  'Shopping': {\r\n    name: 'Shopping',\r\n    color: 'bg-purple-100 text-purple-800',\r\n    icon: '🛍️',\r\n    isSystemTag: true,\r\n  },\r\n  'Entertainment': {\r\n    name: 'Entertainment',\r\n    color: 'bg-pink-100 text-pink-800',\r\n    icon: '🎬',\r\n    isSystemTag: true,\r\n  },\r\n  'Utilities': {\r\n    name: 'Utilities',\r\n    color: 'bg-orange-100 text-orange-800',\r\n    icon: '🏠',\r\n    isSystemTag: true,\r\n  },\r\n  'Healthcare': {\r\n    name: 'Healthcare',\r\n    color: 'bg-red-100 text-red-800',\r\n    icon: '🏥',\r\n    isSystemTag: true,\r\n  },\r\n  'Business': {\r\n    name: 'Business',\r\n    color: 'bg-gray-100 text-gray-800',\r\n    icon: '💼',\r\n    isSystemTag: true,\r\n  },\r\n  'Income': {\r\n    name: 'Income',\r\n    color: 'bg-teal-100 text-teal-800',\r\n    icon: '💰',\r\n    isSystemTag: true,\r\n  },\r\n  'Travel': {\r\n    name: 'Travel',\r\n    color: 'bg-indigo-100 text-indigo-800',\r\n    icon: '✈️',\r\n    isSystemTag: true,\r\n  },\r\n  'Subscriptions': {\r\n    name: 'Subscriptions',\r\n    color: 'bg-yellow-100 text-yellow-800',\r\n    icon: '📱',\r\n    isSystemTag: true,\r\n  },\r\n  'Other': {\r\n    name: 'Other',\r\n    color: 'bg-slate-100 text-slate-800',\r\n    icon: '📝',\r\n    isSystemTag: true,\r\n  },\r\n};\r\n\r\nexport const MERCHANT_PATTERNS: Record<string, Omit<MerchantInfo, 'original'>> = {\r\n  'AMAZON': { cleanName: 'Amazon', logo: '📦', suggestedCategory: 'Shopping', confidence: 0.95 },\r\n  'EBAY': { cleanName: 'eBay', logo: '🏷️', suggestedCategory: 'Shopping', confidence: 0.95 },\r\n  'ETSY': { cleanName: 'Etsy', logo: '🎨', suggestedCategory: 'Shopping', confidence: 0.95 },\r\n  'STARBUCKS': { cleanName: 'Starbucks', logo: '☕', suggestedCategory: 'Food & Dining', confidence: 0.95 },\r\n  'MCDONALD': { cleanName: 'McDonald\\'s', logo: '🍟', suggestedCategory: 'Food & Dining', confidence: 0.95 },\r\n  'SUBWAY': { cleanName: 'Subway', logo: '🥪', suggestedCategory: 'Food & Dining', confidence: 0.95 },\r\n  'CHIPOTLE': { cleanName: 'Chipotle', logo: '🌯', suggestedCategory: 'Food & Dining', confidence: 0.95 },\r\n  'DOORDASH': { cleanName: 'DoorDash', logo: '🚚', suggestedCategory: 'Food & Dining', confidence: 0.95 },\r\n  'UBER EATS': { cleanName: 'Uber Eats', logo: '🍽️', suggestedCategory: 'Food & Dining', confidence: 0.95 },\r\n  'KROGER': { cleanName: 'Kroger', logo: '🛒', suggestedCategory: 'Groceries', confidence: 0.95 },\r\n  'WALMART': { cleanName: 'Walmart', logo: '🏪', suggestedCategory: 'Groceries', confidence: 0.95 },\r\n  'TARGET': { cleanName: 'Target', logo: '🎯', suggestedCategory: 'Shopping', confidence: 0.95 },\r\n  'COSTCO': { cleanName: 'Costco', logo: '📦', suggestedCategory: 'Groceries', confidence: 0.95 },\r\n  'WHOLE FOODS': { cleanName: 'Whole Foods', logo: '🥬', suggestedCategory: 'Groceries', confidence: 0.95 },\r\n  'SHELL': { cleanName: 'Shell', logo: '⛽', suggestedCategory: 'Transportation', confidence: 0.95 },\r\n  'EXXON': { cleanName: 'ExxonMobil', logo: '⛽', suggestedCategory: 'Transportation', confidence: 0.95 },\r\n  'BP': { cleanName: 'BP', logo: '⛽', suggestedCategory: 'Transportation', confidence: 0.95 },\r\n  'UBER': { cleanName: 'Uber', logo: '🚗', suggestedCategory: 'Transportation', confidence: 0.95 },\r\n  'LYFT': { cleanName: 'Lyft', logo: '🚙', suggestedCategory: 'Transportation', confidence: 0.95 },\r\n  'NETFLIX': { cleanName: 'Netflix', logo: '🎬', suggestedCategory: 'Subscriptions', confidence: 0.95 },\r\n  'SPOTIFY': { cleanName: 'Spotify', logo: '🎵', suggestedCategory: 'Subscriptions', confidence: 0.95 },\r\n  'APPLE': { cleanName: 'Apple', logo: '🍎', suggestedCategory: 'Subscriptions', confidence: 0.90 },\r\n  'GOOGLE': { cleanName: 'Google', logo: '🔍', suggestedCategory: 'Subscriptions', confidence: 0.85 },\r\n  'MICROSOFT': { cleanName: 'Microsoft', logo: '💻', suggestedCategory: 'Subscriptions', confidence: 0.90 },\r\n  'VERIZON': { cleanName: 'Verizon', logo: '📱', suggestedCategory: 'Utilities', confidence: 0.95 },\r\n  'ATT': { cleanName: 'AT&T', logo: '📱', suggestedCategory: 'Utilities', confidence: 0.95 },\r\n  'COMCAST': { cleanName: 'Comcast', logo: '📺', suggestedCategory: 'Utilities', confidence: 0.95 },\r\n  'CVS': { cleanName: 'CVS Pharmacy', logo: '💊', suggestedCategory: 'Healthcare', confidence: 0.95 },\r\n  'WALGREENS': { cleanName: 'Walgreens', logo: '💊', suggestedCategory: 'Healthcare', confidence: 0.95 },\r\n  'PAYROLL': { cleanName: 'Salary', logo: '💰', suggestedCategory: 'Income', confidence: 0.95 },\r\n  'FREELANCE': { cleanName: 'Freelance Payment', logo: '💼', suggestedCategory: 'Income', confidence: 0.90 },\r\n  'DIVIDEND': { cleanName: 'Investment Dividend', logo: '📈', suggestedCategory: 'Income', confidence: 0.95 },\r\n  'INTEREST': { cleanName: 'Interest Payment', logo: '🏦', suggestedCategory: 'Income', confidence: 0.95 },\r\n};\r\n\r\n// Mock data generator\r\nexport const generateMockTransactions = (accountId: string, count: number = 10): Transaction[] => {\r\n  const merchants = Object.keys(MERCHANT_PATTERNS);\r\n  const transactions: Transaction[] = [];\r\n  \r\n  for (let i = 0; i < count; i++) {\r\n    const merchantKey = merchants[Math.floor(Math.random() * merchants.length)];\r\n    const merchantInfo = MERCHANT_PATTERNS[merchantKey];\r\n    const isIncome = Math.random() < 0.2; // 20% chance of income\r\n    const amount = isIncome \r\n      ? Math.random() * 2000 + 1000 // Income: $1000-$3000\r\n      : -(Math.random() * 200 + 10); // Expense: $10-$210\r\n    \r\n    const date = new Date();\r\n    date.setDate(date.getDate() - Math.floor(Math.random() * 30));\r\n    \r\n    transactions.push({\r\n      id: `txn_${accountId}_${i}`,\r\n      accountId,\r\n      description: `${merchantKey} #${Math.floor(Math.random() * 1000)}`,\r\n      amount: Math.round(amount * 100) / 100,\r\n      date: date.toISOString().split('T')[0],\r\n      category: merchantInfo.suggestedCategory,\r\n      tags: Math.random() > 0.5 ? [merchantInfo.suggestedCategory] : [],\r\n      pending: Math.random() < 0.1,\r\n      cleanMerchant: {\r\n        ...merchantInfo,\r\n        original: `${merchantKey} #${Math.floor(Math.random() * 1000)}`\r\n      },\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n    });\r\n  }\r\n  \r\n  return transactions.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n};\r\n\r\nexport const MOCK_ACCOUNTS: Account[] = [\r\n  {\r\n    id: 'acc_checking',\r\n    name: 'Primary Checking',\r\n    type: 'CHECKING',\r\n    balance: 2543.67,\r\n    accountNumber: '****1234',\r\n    bankName: 'Chase Bank',\r\n    isActive: true,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString(),\r\n    transactions: generateMockTransactions('acc_checking', 15)\r\n  },\r\n  {\r\n    id: 'acc_savings',\r\n    name: 'High Yield Savings',\r\n    type: 'SAVINGS',\r\n    balance: 12750.00,\r\n    accountNumber: '****5678',\r\n    bankName: 'Ally Bank',\r\n    isActive: true,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString(),\r\n    transactions: generateMockTransactions('acc_savings', 5)\r\n  },\r\n  {\r\n    id: 'acc_credit',\r\n    name: 'Rewards Credit Card',\r\n    type: 'CREDIT',\r\n    balance: -1247.82,\r\n    accountNumber: '****9012',\r\n    bankName: 'Chase Bank',\r\n    limit: 5000,\r\n    isActive: true,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString(),\r\n    transactions: generateMockTransactions('acc_credit', 12)\r\n  }\r\n];\r\n\r\nexport const DEFAULT_PERIODS = ['month', 'quarter', 'year'] as const;\r\n\r\nexport const VALIDATION_RULES = {\r\n  ACCOUNT_NAME: {\r\n    MIN_LENGTH: 2,\r\n    MAX_LENGTH: 50,\r\n  },\r\n  TRANSACTION_DESCRIPTION: {\r\n    MIN_LENGTH: 1,\r\n    MAX_LENGTH: 255,\r\n  },\r\n  TAG_NAME: {\r\n    MIN_LENGTH: 2,\r\n    MAX_LENGTH: 30,\r\n    PATTERN: /^[a-zA-Z0-9\\s&-]+$/,\r\n  },\r\n  AMOUNT: {\r\n    MIN: -999999.99,\r\n    MAX: 999999.99,\r\n  },\r\n};\r\n\r\nexport const ERROR_MESSAGES = {\r\n  BANK_CONNECTION_FAILED: 'Unable to connect to your bank. Please check your credentials.',\r\n  INVALID_CREDENTIALS: 'Invalid username or password.',\r\n  TRANSACTION_SYNC_ERROR: 'Failed to sync transactions. Please try again.',\r\n  ACCOUNT_NOT_FOUND: 'Account not found.',\r\n  INSUFFICIENT_PERMISSIONS: 'You don\\'t have permission to perform this action.',\r\n  RATE_LIMIT_EXCEEDED: 'Too many requests. Please wait and try again.',\r\n  VALIDATION_ERROR: 'Please check your input and try again.',\r\n  NETWORK_ERROR: 'Network error. Please check your connection.',\r\n  UNKNOWN_ERROR: 'An unexpected error occurred.',\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}