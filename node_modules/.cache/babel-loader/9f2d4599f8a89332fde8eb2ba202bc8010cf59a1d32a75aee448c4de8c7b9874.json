{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X2DHHWAN\\\\Desktop\\\\Finance-App\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { Suspense, useEffect } from 'react';\nimport './App.css';\nimport { FinancialProvider } from './contexts/FinancialContext';\nimport { AuthProvider } from './contexts/AuthContext';\nimport { ErrorBoundary } from './components/ErrorBoundary';\nimport { FullScreenSpinner } from './components/ui/LoadingSpinner';\nimport { ProtectedRoute, AuthPage } from './components/auth';\nimport { registerServiceWorker, addOnlineListener, addOfflineListener } from './utils/serviceWorker';\n\n// Lazy load components for code splitting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = /*#__PURE__*/React.lazy(_c = () => import('./components/dashboard/Dashboard').then(module => ({\n  default: module.Dashboard\n})));\n_c2 = Dashboard;\nfunction App() {\n  _s();\n  // Register service worker for offline support\n  useEffect(() => {\n    registerServiceWorker();\n\n    // Add online/offline listeners\n    const handleOnline = () => {\n      console.log('App is online');\n      // You can trigger data sync here\n    };\n    const handleOffline = () => {\n      console.log('App is offline');\n      // You can show offline indicator here\n    };\n    addOnlineListener(handleOnline);\n    addOfflineListener(handleOffline);\n\n    // Cleanup listeners\n    return () => {\n      addOnlineListener(handleOnline);\n      addOfflineListener(handleOffline);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: /*#__PURE__*/_jsxDEV(FinancialProvider, {\n        children: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          fallback: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 37\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(FullScreenSpinner, {\n              text: \"Loading Dashboard...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dashboard$React.lazy\");\n$RefreshReg$(_c2, \"Dashboard\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","Suspense","useEffect","FinancialProvider","AuthProvider","ErrorBoundary","FullScreenSpinner","ProtectedRoute","AuthPage","registerServiceWorker","addOnlineListener","addOfflineListener","jsxDEV","_jsxDEV","Dashboard","lazy","_c","then","module","default","_c2","App","_s","handleOnline","console","log","handleOffline","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","text","_c3","$RefreshReg$"],"sources":["C:/Users/X2DHHWAN/Desktop/Finance-App/src/App.tsx"],"sourcesContent":["import React, { Suspense, useEffect } from 'react';\r\nimport './App.css';\r\nimport { FinancialProvider } from './contexts/FinancialContext';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport { ErrorBoundary } from './components/ErrorBoundary';\r\nimport { FullScreenSpinner } from './components/ui/LoadingSpinner';\r\nimport { ProtectedRoute, AuthPage } from './components/auth';\r\nimport { registerServiceWorker, addOnlineListener, addOfflineListener } from './utils/serviceWorker';\r\n\r\n// Lazy load components for code splitting\r\nconst Dashboard = React.lazy(() => import('./components/dashboard/Dashboard').then(module => ({ default: module.Dashboard })));\r\n\r\nfunction App() {\r\n  // Register service worker for offline support\r\n  useEffect(() => {\r\n    registerServiceWorker();\r\n    \r\n    // Add online/offline listeners\r\n    const handleOnline = () => {\r\n      console.log('App is online');\r\n      // You can trigger data sync here\r\n    };\r\n    \r\n    const handleOffline = () => {\r\n      console.log('App is offline');\r\n      // You can show offline indicator here\r\n    };\r\n    \r\n    addOnlineListener(handleOnline);\r\n    addOfflineListener(handleOffline);\r\n    \r\n    // Cleanup listeners\r\n    return () => {\r\n      addOnlineListener(handleOnline);\r\n      addOfflineListener(handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <AuthProvider>\r\n        <FinancialProvider>\r\n          <ProtectedRoute fallback={<AuthPage />}>\r\n            <Suspense fallback={<FullScreenSpinner text=\"Loading Dashboard...\" />}>\r\n              <Dashboard />\r\n            </Suspense>\r\n          </ProtectedRoute>\r\n        </FinancialProvider>\r\n      </AuthProvider>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,cAAc,EAAEC,QAAQ,QAAQ,mBAAmB;AAC5D,SAASC,qBAAqB,EAAEC,iBAAiB,EAAEC,kBAAkB,QAAQ,uBAAuB;;AAEpG;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,gBAAGd,KAAK,CAACe,IAAI,CAAAC,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAACC,MAAM,KAAK;EAAEC,OAAO,EAAED,MAAM,CAACJ;AAAU,CAAC,CAAC,CAAC,CAAC;AAACM,GAAA,GAAzHN,SAAS;AAEf,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACApB,SAAS,CAAC,MAAM;IACdO,qBAAqB,CAAC,CAAC;;IAEvB;IACA,MAAMc,YAAY,GAAGA,CAAA,KAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B;IACF,CAAC;IAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1BF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B;IACF,CAAC;IAEDf,iBAAiB,CAACa,YAAY,CAAC;IAC/BZ,kBAAkB,CAACe,aAAa,CAAC;;IAEjC;IACA,OAAO,MAAM;MACXhB,iBAAiB,CAACa,YAAY,CAAC;MAC/BZ,kBAAkB,CAACe,aAAa,CAAC;IACnC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA,CAACR,aAAa;IAAAsB,QAAA,eACZd,OAAA,CAACT,YAAY;MAAAuB,QAAA,eACXd,OAAA,CAACV,iBAAiB;QAAAwB,QAAA,eAChBd,OAAA,CAACN,cAAc;UAACqB,QAAQ,eAAEf,OAAA,CAACL,QAAQ;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAAAL,QAAA,eACrCd,OAAA,CAACZ,QAAQ;YAAC2B,QAAQ,eAAEf,OAAA,CAACP,iBAAiB;cAAC2B,IAAI,EAAC;YAAsB;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAAAL,QAAA,eACpEd,OAAA,CAACC,SAAS;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEpB;AAACV,EAAA,CAvCQD,GAAG;AAAAa,GAAA,GAAHb,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAL,EAAA,EAAAI,GAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}