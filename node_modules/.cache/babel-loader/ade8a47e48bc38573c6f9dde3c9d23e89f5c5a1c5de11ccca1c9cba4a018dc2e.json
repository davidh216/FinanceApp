{"ast":null,"code":"// Update the KPISection component in src/components/dashboard/KPISection.tsx\nimport React from'react';import{KPICard}from'../ui/KPICard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const KPISection=_ref=>{let{summary,totalBalance,period,balanceTrend=[],incomeTrend=[],expenseTrend=[],savingsTrend=[]}=_ref;// Dynamic titles based on period\nconst getPeriodLabel=period=>{switch(period){case'day':return'Daily';case'week':return'Weekly';case'month':return'Monthly';case'quarter':return'Quarterly';case'year':return'Yearly';case'5year':return'5-Year';default:return'Monthly';}};const periodLabel=getPeriodLabel(period);// Calculate trend changes (mock for now, but you could calculate real trends)\nconst calculateTrendChange=(current,previous)=>{if(previous===0)return current>0?100:0;return(current-previous)/previous*100;};// Calculate previous period data for trend calculation\nconst prevIncome=summary.previousPeriodIncome||summary.monthlyIncome*0.9;const prevExpenses=summary.previousPeriodExpenses||summary.monthlyExpenses*1.1;const prevBalance=totalBalance*0.95;// Mock previous balance\n// Calculate value changes\nconst balanceValueChange=totalBalance-prevBalance;const incomeValueChange=summary.monthlyIncome-prevIncome;const expenseValueChange=summary.monthlyExpenses-prevExpenses;const savingsValueChange=summary.savingsRate*100-(prevIncome>0?(prevIncome-prevExpenses)/prevIncome:0)*100;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsx(KPICard,{title:\"Total Balance\",value:totalBalance,change:calculateTrendChange(totalBalance,prevBalance),valueChange:balanceValueChange,isPositive:totalBalance>=prevBalance,color:totalBalance<0?'red':'green',trendData:balanceTrend,period:period}),/*#__PURE__*/_jsx(KPICard,{title:`Income (${periodLabel})`,value:summary.monthlyIncome,change:calculateTrendChange(summary.monthlyIncome,prevIncome),valueChange:incomeValueChange,isPositive:summary.monthlyIncome>=prevIncome,color:\"green\",trendData:incomeTrend,period:period}),/*#__PURE__*/_jsx(KPICard,{title:`Spending (${periodLabel})`,value:summary.monthlyExpenses,change:calculateTrendChange(summary.monthlyExpenses,prevExpenses),valueChange:expenseValueChange,isPositive:summary.monthlyExpenses<=prevExpenses// Lower spending is better\n,color:\"red\",trendData:expenseTrend,period:period}),/*#__PURE__*/_jsx(KPICard,{title:\"Savings Rate\",value:summary.savingsRate*100,change:2.1// Mock change for now\n,valueChange:savingsValueChange,isPositive:true,isCurrency:false,color:\"blue\",trendData:savingsTrend,period:period})]})});};","map":{"version":3,"names":["React","KPICard","jsx","_jsx","jsxs","_jsxs","KPISection","_ref","summary","totalBalance","period","balanceTrend","incomeTrend","expenseTrend","savingsTrend","getPeriodLabel","periodLabel","calculateTrendChange","current","previous","prevIncome","previousPeriodIncome","monthlyIncome","prevExpenses","previousPeriodExpenses","monthlyExpenses","prevBalance","balanceValueChange","incomeValueChange","expenseValueChange","savingsValueChange","savingsRate","children","className","title","value","change","valueChange","isPositive","color","trendData","isCurrency"],"sources":["C:/Users/dliz1/Desktop/FinanceApp/src/components/dashboard/KPISection.tsx"],"sourcesContent":["// Update the KPISection component in src/components/dashboard/KPISection.tsx\n\nimport React from 'react';\nimport { KPICard } from '../ui/KPICard';\nimport { FinancialSummary, TimePeriod } from '../../types/financial';\n\ninterface KPISectionProps {\n  summary: FinancialSummary;\n  totalBalance: number;\n  period: TimePeriod;\n  balanceTrend?: number[];\n  incomeTrend?: number[];\n  expenseTrend?: number[];\n  savingsTrend?: number[];\n}\n\nexport const KPISection: React.FC<KPISectionProps> = ({\n  summary,\n  totalBalance,\n  period,\n  balanceTrend = [],\n  incomeTrend = [],\n  expenseTrend = [],\n  savingsTrend = [],\n}) => {\n  // Dynamic titles based on period\n  const getPeriodLabel = (period: TimePeriod): string => {\n    switch (period) {\n      case 'day':\n        return 'Daily';\n      case 'week':\n        return 'Weekly';\n      case 'month':\n        return 'Monthly';\n      case 'quarter':\n        return 'Quarterly';\n      case 'year':\n        return 'Yearly';\n      case '5year':\n        return '5-Year';\n      default:\n        return 'Monthly';\n    }\n  };\n\n  const periodLabel = getPeriodLabel(period);\n\n  // Calculate trend changes (mock for now, but you could calculate real trends)\n  const calculateTrendChange = (current: number, previous: number): number => {\n    if (previous === 0) return current > 0 ? 100 : 0;\n    return ((current - previous) / previous) * 100;\n  };\n\n  // Calculate previous period data for trend calculation\n  const prevIncome =\n    summary.previousPeriodIncome || summary.monthlyIncome * 0.9;\n  const prevExpenses =\n    summary.previousPeriodExpenses || summary.monthlyExpenses * 1.1;\n  const prevBalance = totalBalance * 0.95; // Mock previous balance\n\n  // Calculate value changes\n  const balanceValueChange = totalBalance - prevBalance;\n  const incomeValueChange = summary.monthlyIncome - prevIncome;\n  const expenseValueChange = summary.monthlyExpenses - prevExpenses;\n  const savingsValueChange =\n    summary.savingsRate * 100 -\n    (prevIncome > 0 ? (prevIncome - prevExpenses) / prevIncome : 0) * 100;\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <KPICard\n          title=\"Total Balance\"\n          value={totalBalance}\n          change={calculateTrendChange(totalBalance, prevBalance)}\n          valueChange={balanceValueChange}\n          isPositive={totalBalance >= prevBalance}\n          color={totalBalance < 0 ? 'red' : 'green'}\n          trendData={balanceTrend}\n          period={period}\n        />\n\n        <KPICard\n          title={`Income (${periodLabel})`}\n          value={summary.monthlyIncome}\n          change={calculateTrendChange(summary.monthlyIncome, prevIncome)}\n          valueChange={incomeValueChange}\n          isPositive={summary.monthlyIncome >= prevIncome}\n          color=\"green\"\n          trendData={incomeTrend}\n          period={period}\n        />\n\n        <KPICard\n          title={`Spending (${periodLabel})`}\n          value={summary.monthlyExpenses}\n          change={calculateTrendChange(summary.monthlyExpenses, prevExpenses)}\n          valueChange={expenseValueChange}\n          isPositive={summary.monthlyExpenses <= prevExpenses} // Lower spending is better\n          color=\"red\"\n          trendData={expenseTrend}\n          period={period}\n        />\n\n        <KPICard\n          title=\"Savings Rate\"\n          value={summary.savingsRate * 100}\n          change={2.1} // Mock change for now\n          valueChange={savingsValueChange}\n          isPositive={true}\n          isCurrency={false}\n          color=\"blue\"\n          trendData={savingsTrend}\n          period={period}\n        />\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}