{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X2DHHWAN\\\\Desktop\\\\Finance-App\\\\src\\\\components\\\\charts\\\\BalanceTrendChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { BaseChart } from './BaseChart';\nimport { processBalanceTrendData, CHART_COLORS } from '../../utils/chartUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BalanceTrendChart = ({\n  transactions,\n  accounts,\n  period,\n  height = 300,\n  className = '',\n  onDataPointClick,\n  loading = false,\n  error = null\n}) => {\n  _s();\n  const chartData = useMemo(() => {\n    const dataPoints = processBalanceTrendData(transactions, accounts, period);\n    return {\n      labels: dataPoints.map(point => point.label),\n      datasets: [{\n        label: 'Balance',\n        data: dataPoints.map(point => point.value),\n        borderColor: CHART_COLORS.primary,\n        backgroundColor: CHART_COLORS.primary + '20',\n        borderWidth: 3,\n        fill: true,\n        tension: 0.4,\n        pointBackgroundColor: CHART_COLORS.primary,\n        pointBorderColor: '#fff',\n        pointBorderWidth: 2,\n        pointRadius: 4,\n        pointHoverRadius: 6\n      }]\n    };\n  }, [transactions, accounts, period]);\n  const handleChartClick = (event, elements) => {\n    if (elements.length > 0 && onDataPointClick) {\n      const dataIndex = elements[0].index;\n      const dataPoints = processBalanceTrendData(transactions, accounts, period);\n      onDataPointClick(dataPoints[dataIndex]);\n    }\n  };\n  const customOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: `Balance Trend - ${period.charAt(0).toUpperCase() + period.slice(1)}`,\n        font: {\n          size: 16,\n          weight: 'bold'\n        },\n        color: '#374151',\n        padding: {\n          top: 10,\n          bottom: 20\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const value = context.parsed.y;\n            return `Balance: $${value.toLocaleString()}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        ticks: {\n          callback: function (value) {\n            return '$' + value.toLocaleString();\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `bg-white rounded-lg shadow-sm border p-6 ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-2\",\n        children: \"Balance Trend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: \"Track your account balance over time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BaseChart, {\n      type: \"line\",\n      data: chartData,\n      options: customOptions,\n      height: height,\n      onChartClick: handleChartClick,\n      loading: loading,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex items-center justify-between text-sm text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: \"Current Balance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-green-600 font-semibold\",\n          children: [\"$\", accounts.reduce((sum, account) => sum + account.balance, 0).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: \"Period:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 capitalize\",\n          children: period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(BalanceTrendChart, \"i4eYYg6GOj65klTCDK4mhi4wfgw=\");\n_c = BalanceTrendChart;\nvar _c;\n$RefreshReg$(_c, \"BalanceTrendChart\");","map":{"version":3,"names":["React","useMemo","BaseChart","processBalanceTrendData","CHART_COLORS","jsxDEV","_jsxDEV","BalanceTrendChart","transactions","accounts","period","height","className","onDataPointClick","loading","error","_s","chartData","dataPoints","labels","map","point","label","datasets","data","value","borderColor","primary","backgroundColor","borderWidth","fill","tension","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","pointHoverRadius","handleChartClick","event","elements","length","dataIndex","index","customOptions","plugins","title","display","text","charAt","toUpperCase","slice","font","size","weight","color","padding","top","bottom","tooltip","callbacks","context","parsed","y","toLocaleString","scales","ticks","callback","children","fileName","_jsxFileName","lineNumber","columnNumber","type","options","onChartClick","reduce","sum","account","balance","_c","$RefreshReg$"],"sources":["C:/Users/X2DHHWAN/Desktop/Finance-App/src/components/charts/BalanceTrendChart.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { Transaction, Account, TimePeriod } from '../../types/financial';\r\nimport { BaseChart } from './BaseChart';\r\nimport { processBalanceTrendData, CHART_COLORS } from '../../utils/chartUtils';\r\n\r\ninterface BalanceTrendChartProps {\r\n  transactions: Transaction[];\r\n  accounts: Account[];\r\n  period: TimePeriod;\r\n  height?: string | number;\r\n  className?: string;\r\n  onDataPointClick?: (dataPoint: any) => void;\r\n  loading?: boolean;\r\n  error?: string | null;\r\n}\r\n\r\nexport const BalanceTrendChart: React.FC<BalanceTrendChartProps> = ({\r\n  transactions,\r\n  accounts,\r\n  period,\r\n  height = 300,\r\n  className = '',\r\n  onDataPointClick,\r\n  loading = false,\r\n  error = null,\r\n}) => {\r\n  const chartData = useMemo(() => {\r\n    const dataPoints = processBalanceTrendData(transactions, accounts, period);\r\n    \r\n    return {\r\n      labels: dataPoints.map(point => point.label),\r\n      datasets: [\r\n        {\r\n          label: 'Balance',\r\n          data: dataPoints.map(point => point.value),\r\n          borderColor: CHART_COLORS.primary,\r\n          backgroundColor: CHART_COLORS.primary + '20',\r\n          borderWidth: 3,\r\n          fill: true,\r\n          tension: 0.4,\r\n          pointBackgroundColor: CHART_COLORS.primary,\r\n          pointBorderColor: '#fff',\r\n          pointBorderWidth: 2,\r\n          pointRadius: 4,\r\n          pointHoverRadius: 6,\r\n        },\r\n      ],\r\n    };\r\n  }, [transactions, accounts, period]);\r\n\r\n  const handleChartClick = (event: any, elements: any[]) => {\r\n    if (elements.length > 0 && onDataPointClick) {\r\n      const dataIndex = elements[0].index;\r\n      const dataPoints = processBalanceTrendData(transactions, accounts, period);\r\n      onDataPointClick(dataPoints[dataIndex]);\r\n    }\r\n  };\r\n\r\n  const customOptions = {\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: `Balance Trend - ${period.charAt(0).toUpperCase() + period.slice(1)}`,\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold' as const,\r\n        },\r\n        color: '#374151',\r\n        padding: {\r\n          top: 10,\r\n          bottom: 20,\r\n        },\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(context: any) {\r\n            const value = context.parsed.y;\r\n            return `Balance: $${value.toLocaleString()}`;\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        ticks: {\r\n          callback: function(value: any) {\r\n            return '$' + value.toLocaleString();\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={`bg-white rounded-lg shadow-sm border p-6 ${className}`}>\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n          Balance Trend\r\n        </h3>\r\n        <p className=\"text-sm text-gray-600\">\r\n          Track your account balance over time\r\n        </p>\r\n      </div>\r\n      \r\n      <BaseChart\r\n        type=\"line\"\r\n        data={chartData}\r\n        options={customOptions}\r\n        height={height}\r\n        onChartClick={handleChartClick}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n      \r\n      {!loading && !error && (\r\n        <div className=\"mt-4 flex items-center justify-between text-sm text-gray-600\">\r\n          <div>\r\n            <span className=\"font-medium\">Current Balance:</span>\r\n            <span className=\"ml-2 text-green-600 font-semibold\">\r\n              ${accounts.reduce((sum, account) => sum + account.balance, 0).toLocaleString()}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium\">Period:</span>\r\n            <span className=\"ml-2 capitalize\">{period}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}