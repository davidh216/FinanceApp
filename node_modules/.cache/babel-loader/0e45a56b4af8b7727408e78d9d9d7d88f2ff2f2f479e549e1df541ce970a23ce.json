{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dliz1\\\\Desktop\\\\FinanceApp\\\\src\\\\components\\\\dashboard\\\\KPISection.tsx\";\n// Update the KPISection component in src/components/dashboard/KPISection.tsx\n\nimport React from 'react';\nimport { KPICard } from '../ui/KPICard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const KPISection = ({\n  summary,\n  totalBalance,\n  period,\n  balanceTrend = [],\n  incomeTrend = [],\n  expenseTrend = [],\n  savingsTrend = []\n}) => {\n  // Dynamic titles based on period\n  const getPeriodLabel = period => {\n    switch (period) {\n      case 'day':\n        return 'Daily';\n      case 'week':\n        return 'Weekly';\n      case 'month':\n        return 'Monthly';\n      case 'quarter':\n        return 'Quarterly';\n      case 'year':\n        return 'Yearly';\n      case '5year':\n        return '5-Year';\n      default:\n        return 'Monthly';\n    }\n  };\n  const periodLabel = getPeriodLabel(period);\n\n  // Calculate trend changes (mock for now, but you could calculate real trends)\n  const calculateTrendChange = (current, previous) => {\n    if (previous === 0) return current > 0 ? 100 : 0;\n    return (current - previous) / previous * 100;\n  };\n\n  // Calculate previous period data for trend calculation\n  const prevIncome = summary.previousPeriodIncome || summary.monthlyIncome * 0.9;\n  const prevExpenses = summary.previousPeriodExpenses || summary.monthlyExpenses * 1.1;\n  const prevBalance = totalBalance * 0.95; // Mock previous balance\n\n  // Calculate value changes\n  const balanceValueChange = totalBalance - prevBalance;\n  const incomeValueChange = summary.monthlyIncome - prevIncome;\n  const expenseValueChange = summary.monthlyExpenses - prevExpenses;\n  const savingsValueChange = summary.savingsRate * 100 - (prevIncome > 0 ? (prevIncome - prevExpenses) / prevIncome : 0) * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(KPICard, {\n        title: \"Total Balance\",\n        value: totalBalance,\n        change: calculateTrendChange(totalBalance, prevBalance),\n        valueChange: balanceValueChange,\n        isPositive: totalBalance >= prevBalance,\n        color: totalBalance < 0 ? 'red' : 'green',\n        trendData: balanceTrend,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n        title: `Income (${periodLabel})`,\n        value: summary.monthlyIncome,\n        change: calculateTrendChange(summary.monthlyIncome, prevIncome),\n        valueChange: incomeValueChange,\n        isPositive: summary.monthlyIncome >= prevIncome,\n        color: \"green\",\n        trendData: incomeTrend,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n        title: `Spending (${periodLabel})`,\n        value: summary.monthlyExpenses,\n        change: calculateTrendChange(summary.monthlyExpenses, prevExpenses),\n        valueChange: expenseValueChange,\n        isPositive: summary.monthlyExpenses <= prevExpenses // Lower spending is better\n        ,\n        color: \"red\",\n        trendData: expenseTrend,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n        title: \"Savings Rate\",\n        value: summary.savingsRate * 100,\n        change: 2.1 // Mock change for now\n        ,\n        valueChange: savingsValueChange,\n        isPositive: true,\n        isCurrency: false,\n        color: \"blue\",\n        trendData: savingsTrend,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = KPISection;\nvar _c;\n$RefreshReg$(_c, \"KPISection\");","map":{"version":3,"names":["React","KPICard","jsxDEV","_jsxDEV","KPISection","summary","totalBalance","period","balanceTrend","incomeTrend","expenseTrend","savingsTrend","getPeriodLabel","periodLabel","calculateTrendChange","current","previous","prevIncome","previousPeriodIncome","monthlyIncome","prevExpenses","previousPeriodExpenses","monthlyExpenses","prevBalance","balanceValueChange","incomeValueChange","expenseValueChange","savingsValueChange","savingsRate","children","className","title","value","change","valueChange","isPositive","color","trendData","fileName","_jsxFileName","lineNumber","columnNumber","isCurrency","_c","$RefreshReg$"],"sources":["C:/Users/dliz1/Desktop/FinanceApp/src/components/dashboard/KPISection.tsx"],"sourcesContent":["// Update the KPISection component in src/components/dashboard/KPISection.tsx\n\nimport React from 'react';\nimport { KPICard } from '../ui/KPICard';\nimport { FinancialSummary, TimePeriod } from '../../types/financial';\n\ninterface KPISectionProps {\n  summary: FinancialSummary;\n  totalBalance: number;\n  period: TimePeriod;\n  balanceTrend?: number[];\n  incomeTrend?: number[];\n  expenseTrend?: number[];\n  savingsTrend?: number[];\n}\n\nexport const KPISection: React.FC<KPISectionProps> = ({\n  summary,\n  totalBalance,\n  period,\n  balanceTrend = [],\n  incomeTrend = [],\n  expenseTrend = [],\n  savingsTrend = [],\n}) => {\n  // Dynamic titles based on period\n  const getPeriodLabel = (period: TimePeriod): string => {\n    switch (period) {\n      case 'day':\n        return 'Daily';\n      case 'week':\n        return 'Weekly';\n      case 'month':\n        return 'Monthly';\n      case 'quarter':\n        return 'Quarterly';\n      case 'year':\n        return 'Yearly';\n      case '5year':\n        return '5-Year';\n      default:\n        return 'Monthly';\n    }\n  };\n\n  const periodLabel = getPeriodLabel(period);\n\n  // Calculate trend changes (mock for now, but you could calculate real trends)\n  const calculateTrendChange = (current: number, previous: number): number => {\n    if (previous === 0) return current > 0 ? 100 : 0;\n    return ((current - previous) / previous) * 100;\n  };\n\n  // Calculate previous period data for trend calculation\n  const prevIncome =\n    summary.previousPeriodIncome || summary.monthlyIncome * 0.9;\n  const prevExpenses =\n    summary.previousPeriodExpenses || summary.monthlyExpenses * 1.1;\n  const prevBalance = totalBalance * 0.95; // Mock previous balance\n\n  // Calculate value changes\n  const balanceValueChange = totalBalance - prevBalance;\n  const incomeValueChange = summary.monthlyIncome - prevIncome;\n  const expenseValueChange = summary.monthlyExpenses - prevExpenses;\n  const savingsValueChange =\n    summary.savingsRate * 100 -\n    (prevIncome > 0 ? (prevIncome - prevExpenses) / prevIncome : 0) * 100;\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <KPICard\n          title=\"Total Balance\"\n          value={totalBalance}\n          change={calculateTrendChange(totalBalance, prevBalance)}\n          valueChange={balanceValueChange}\n          isPositive={totalBalance >= prevBalance}\n          color={totalBalance < 0 ? 'red' : 'green'}\n          trendData={balanceTrend}\n          period={period}\n        />\n\n        <KPICard\n          title={`Income (${periodLabel})`}\n          value={summary.monthlyIncome}\n          change={calculateTrendChange(summary.monthlyIncome, prevIncome)}\n          valueChange={incomeValueChange}\n          isPositive={summary.monthlyIncome >= prevIncome}\n          color=\"green\"\n          trendData={incomeTrend}\n          period={period}\n        />\n\n        <KPICard\n          title={`Spending (${periodLabel})`}\n          value={summary.monthlyExpenses}\n          change={calculateTrendChange(summary.monthlyExpenses, prevExpenses)}\n          valueChange={expenseValueChange}\n          isPositive={summary.monthlyExpenses <= prevExpenses} // Lower spending is better\n          color=\"red\"\n          trendData={expenseTrend}\n          period={period}\n        />\n\n        <KPICard\n          title=\"Savings Rate\"\n          value={summary.savingsRate * 100}\n          change={2.1} // Mock change for now\n          valueChange={savingsValueChange}\n          isPositive={true}\n          isCurrency={false}\n          color=\"blue\"\n          trendData={savingsTrend}\n          period={period}\n        />\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}