{"ast":null,"code":"import React,{createContext,useContext,useReducer,useMemo,useState}from'react';import{MOCK_ACCOUNTS}from'../constants/financial';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={accounts:MOCK_ACCOUNTS,transactions:MOCK_ACCOUNTS.flatMap(acc=>acc.transactions||[]),selectedAccount:null,currentScreen:'dashboard',selectedPeriod:'month',isLoading:false,error:null,filters:{},sortBy:'date-desc'};const financialReducer=(state,action)=>{switch(action.type){case'VIEW_ACCOUNT_DETAIL':return{...state,selectedAccount:action.payload,currentScreen:'account-detail'};case'SET_LOADING':return{...state,isLoading:action.payload};case'SET_ERROR':return{...state,error:action.payload};case'SELECT_ACCOUNT':return{...state,selectedAccount:action.payload};case'CHANGE_SCREEN':return{...state,currentScreen:action.payload};case'CHANGE_PERIOD':return{...state,selectedPeriod:action.payload};case'ADD_TAG':return{...state,accounts:state.accounts.map(account=>{var _account$transactions;return{...account,transactions:(_account$transactions=account.transactions)===null||_account$transactions===void 0?void 0:_account$transactions.map(txn=>txn.id===action.payload.transactionId?{...txn,tags:Array.from(new Set([...txn.tags,action.payload.tag]))}:txn)};}),transactions:state.transactions.map(txn=>txn.id===action.payload.transactionId?{...txn,tags:Array.from(new Set([...txn.tags,action.payload.tag]))}:txn)};case'REMOVE_TAG':return{...state,accounts:state.accounts.map(account=>{var _account$transactions2;return{...account,transactions:(_account$transactions2=account.transactions)===null||_account$transactions2===void 0?void 0:_account$transactions2.map(txn=>txn.id===action.payload.transactionId?{...txn,tags:txn.tags.filter(tag=>tag!==action.payload.tag)}:txn)};}),transactions:state.transactions.map(txn=>txn.id===action.payload.transactionId?{...txn,tags:txn.tags.filter(tag=>tag!==action.payload.tag)}:txn)};case'CONNECT_ACCOUNT':return{...state,accounts:[...state.accounts,action.payload],transactions:[...state.transactions,...(action.payload.transactions||[])]};case'APPLY_FILTERS':return{...state,filters:action.payload};case'SET_CUSTOM_DATE_RANGE':return{...state,selectedPeriod:'custom',customDateRange:action.payload};default:return state;}};const FinancialContext=/*#__PURE__*/createContext(null);export const FinancialProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(financialReducer,initialState);const[isPrivacyMode,setIsPrivacyMode]=useState(false);const[accountFilter,setAccountFilter]=useState('personal');const totalBalance=useMemo(()=>state.accounts.reduce((sum,account)=>sum+account.balance,0),[state.accounts]);const summary=useMemo(()=>{const today=new Date();let startDate;let endDate;let periodLabel;// Calculate period boundaries based on selectedPeriod\nswitch(state.selectedPeriod){case'day':startDate=new Date(today.getFullYear(),today.getMonth(),today.getDate());endDate=new Date();// Today\nperiodLabel='daily';break;case'week':const dayOfWeek=today.getDay();const daysToSubtract=dayOfWeek===0?6:dayOfWeek-1;// Monday = 0\nstartDate=new Date(today.getFullYear(),today.getMonth(),today.getDate()-daysToSubtract);endDate=new Date();// Today\nperiodLabel='weekly';break;case'month':startDate=new Date(today.getFullYear(),today.getMonth(),1);endDate=new Date();// Today\nperiodLabel='monthly';break;case'quarter':const currentQuarter=Math.floor(today.getMonth()/3);startDate=new Date(today.getFullYear(),currentQuarter*3,1);endDate=new Date();// Today\nperiodLabel='quarterly';break;case'year':startDate=new Date(today.getFullYear(),0,1);endDate=new Date();// Today\nperiodLabel='yearly';break;case'5year':startDate=new Date(today.getFullYear()-5,0,1);endDate=new Date();// Today\nperiodLabel='5-year';break;case'custom':if(state.customDateRange){startDate=new Date(state.customDateRange.startDate);endDate=new Date(state.customDateRange.endDate);periodLabel=state.customDateRange.label||'custom';}else{startDate=new Date(today.getFullYear(),today.getMonth(),1);endDate=new Date();// Today\nperiodLabel='monthly';}break;default:startDate=new Date(today.getFullYear(),today.getMonth(),1);endDate=new Date();// Today\nperiodLabel='monthly';}// Filter transactions for the selected period\nconst periodTransactions=state.transactions.filter(txn=>{const txnDate=new Date(txn.date);return txnDate>=startDate&&txnDate<=endDate;});const periodIncome=periodTransactions.filter(txn=>txn.amount>0).reduce((sum,txn)=>sum+txn.amount,0);const periodExpenses=Math.abs(periodTransactions.filter(txn=>txn.amount<0).reduce((sum,txn)=>sum+txn.amount,0));const savingsRate=periodIncome>0?(periodIncome-periodExpenses)/periodIncome:0;// Calculate previous period for comparison\nlet prevStartDate;switch(state.selectedPeriod){case'day':prevStartDate=new Date(today.getFullYear(),today.getMonth(),today.getDate()-1);break;case'week':const prevWeekDaysToSubtract=(today.getDay()===0?6:today.getDay()-1)+7;prevStartDate=new Date(today.getFullYear(),today.getMonth(),today.getDate()-prevWeekDaysToSubtract);break;case'month':prevStartDate=new Date(today.getFullYear(),today.getMonth()-1,1);break;case'quarter':const prevQuarter=Math.floor(today.getMonth()/3)-1;prevStartDate=prevQuarter>=0?new Date(today.getFullYear(),prevQuarter*3,1):new Date(today.getFullYear()-1,9,1);// Q4 of previous year\nbreak;case'year':prevStartDate=new Date(today.getFullYear()-1,0,1);break;case'5year':prevStartDate=new Date(today.getFullYear()-10,0,1);break;default:prevStartDate=new Date(today.getFullYear(),today.getMonth()-1,1);}const prevEndDate=new Date(startDate.getTime()-1);// Day before current period starts\nconst prevPeriodTransactions=state.transactions.filter(txn=>{const txnDate=new Date(txn.date);return txnDate>=prevStartDate&&txnDate<=prevEndDate;});const prevPeriodIncome=prevPeriodTransactions.filter(txn=>txn.amount>0).reduce((sum,txn)=>sum+txn.amount,0);const prevPeriodExpenses=Math.abs(prevPeriodTransactions.filter(txn=>txn.amount<0).reduce((sum,txn)=>sum+txn.amount,0));return{totalBalance,monthlyIncome:Math.round(periodIncome*100)/100,monthlyExpenses:Math.round(periodExpenses*100)/100,netWorth:totalBalance,debtToIncomeRatio:periodIncome>0?periodExpenses/periodIncome:0,savingsRate:Math.max(0,savingsRate),// Add comparison data for trends\npreviousPeriodIncome:prevPeriodIncome,previousPeriodExpenses:prevPeriodExpenses,periodLabel};},[state.transactions,totalBalance,state.selectedPeriod,state.customDateRange]);const selectAccount=account=>{dispatch({type:'SELECT_ACCOUNT',payload:account});};const changeScreen=screen=>{dispatch({type:'CHANGE_SCREEN',payload:screen});};const changePeriod=period=>{dispatch({type:'CHANGE_PERIOD',payload:period});};const addTag=(transactionId,tag)=>{dispatch({type:'ADD_TAG',payload:{transactionId,tag}});};const removeTag=(transactionId,tag)=>{dispatch({type:'REMOVE_TAG',payload:{transactionId,tag}});};const applyFilters=filters=>{dispatch({type:'APPLY_FILTERS',payload:filters});};const viewAccountDetail=account=>{dispatch({type:'VIEW_ACCOUNT_DETAIL',payload:account});};const setCustomDateRange=(startDate,endDate,label)=>{dispatch({type:'SET_CUSTOM_DATE_RANGE',payload:{startDate,endDate,label:label||'Custom Range'}});};const togglePrivacyMode=()=>{setIsPrivacyMode(!isPrivacyMode);};const value={state,dispatch,totalBalance,summary,selectAccount,changeScreen,changePeriod,addTag,removeTag,applyFilters,viewAccountDetail,setCustomDateRange,isPrivacyMode,togglePrivacyMode,accountFilter,setAccountFilter};return/*#__PURE__*/_jsx(FinancialContext.Provider,{value:value,children:children});};export const useFinancial=()=>{const context=useContext(FinancialContext);if(!context){throw new Error('useFinancial must be used within a FinancialProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useMemo","useState","MOCK_ACCOUNTS","jsx","_jsx","initialState","accounts","transactions","flatMap","acc","selectedAccount","currentScreen","selectedPeriod","isLoading","error","filters","sortBy","financialReducer","state","action","type","payload","map","account","_account$transactions","txn","id","transactionId","tags","Array","from","Set","tag","_account$transactions2","filter","customDateRange","FinancialContext","FinancialProvider","_ref","children","dispatch","isPrivacyMode","setIsPrivacyMode","accountFilter","setAccountFilter","totalBalance","reduce","sum","balance","summary","today","Date","startDate","endDate","periodLabel","getFullYear","getMonth","getDate","dayOfWeek","getDay","daysToSubtract","currentQuarter","Math","floor","label","periodTransactions","txnDate","date","periodIncome","amount","periodExpenses","abs","savingsRate","prevStartDate","prevWeekDaysToSubtract","prevQuarter","prevEndDate","getTime","prevPeriodTransactions","prevPeriodIncome","prevPeriodExpenses","monthlyIncome","round","monthlyExpenses","netWorth","debtToIncomeRatio","max","previousPeriodIncome","previousPeriodExpenses","selectAccount","changeScreen","screen","changePeriod","period","addTag","removeTag","applyFilters","viewAccountDetail","setCustomDateRange","togglePrivacyMode","value","Provider","useFinancial","context","Error"],"sources":["C:/Users/dliz1/Desktop/FinanceApp/src/contexts/FinancialContext.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  FinancialState,\n  FinancialAction,\n  Account,\n  FilterOptions,\n  TimePeriod,\n  FinancialSummary,\n} from '../types/financial';\nimport { MOCK_ACCOUNTS } from '../constants/financial';\n\nconst initialState: FinancialState = {\n  accounts: MOCK_ACCOUNTS,\n  transactions: MOCK_ACCOUNTS.flatMap((acc) => acc.transactions || []),\n  selectedAccount: null,\n  currentScreen: 'dashboard',\n  selectedPeriod: 'month',\n  isLoading: false,\n  error: null,\n  filters: {},\n  sortBy: 'date-desc',\n};\n\nconst financialReducer = (\n  state: FinancialState,\n  action: FinancialAction\n): FinancialState => {\n  switch (action.type) {\n    case 'VIEW_ACCOUNT_DETAIL':\n      return {\n        ...state,\n        selectedAccount: action.payload,\n        currentScreen: 'account-detail',\n      };\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    case 'SELECT_ACCOUNT':\n      return { ...state, selectedAccount: action.payload };\n    case 'CHANGE_SCREEN':\n      return { ...state, currentScreen: action.payload };\n    case 'CHANGE_PERIOD':\n      return { ...state, selectedPeriod: action.payload };\n    case 'ADD_TAG':\n      return {\n        ...state,\n        accounts: state.accounts.map((account) => ({\n          ...account,\n          transactions: account.transactions?.map((txn) =>\n            txn.id === action.payload.transactionId\n              ? {\n                  ...txn,\n                  tags: Array.from(new Set([...txn.tags, action.payload.tag])),\n                }\n              : txn\n          ),\n        })),\n        transactions: state.transactions.map((txn) =>\n          txn.id === action.payload.transactionId\n            ? {\n                ...txn,\n                tags: Array.from(new Set([...txn.tags, action.payload.tag])),\n              }\n            : txn\n        ),\n      };\n    case 'REMOVE_TAG':\n      return {\n        ...state,\n        accounts: state.accounts.map((account) => ({\n          ...account,\n          transactions: account.transactions?.map((txn) =>\n            txn.id === action.payload.transactionId\n              ? {\n                  ...txn,\n                  tags: txn.tags.filter((tag) => tag !== action.payload.tag),\n                }\n              : txn\n          ),\n        })),\n        transactions: state.transactions.map((txn) =>\n          txn.id === action.payload.transactionId\n            ? {\n                ...txn,\n                tags: txn.tags.filter((tag) => tag !== action.payload.tag),\n              }\n            : txn\n        ),\n      };\n    case 'CONNECT_ACCOUNT':\n      return {\n        ...state,\n        accounts: [...state.accounts, action.payload],\n        transactions: [\n          ...state.transactions,\n          ...(action.payload.transactions || []),\n        ],\n      };\n    case 'APPLY_FILTERS':\n      return { ...state, filters: action.payload };\n    case 'SET_CUSTOM_DATE_RANGE':\n      return {\n        ...state,\n        selectedPeriod: 'custom',\n        customDateRange: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\ninterface FinancialContextType {\n  state: FinancialState;\n  dispatch: React.Dispatch<FinancialAction>;\n  totalBalance: number;\n  summary: FinancialSummary;\n  selectAccount: (account: Account | null) => void;\n  changeScreen: (screen: 'dashboard' | 'accounts' | 'transactions') => void;\n  changePeriod: (period: TimePeriod) => void;\n  addTag: (transactionId: string, tag: string) => void;\n  removeTag: (transactionId: string, tag: string) => void;\n  applyFilters: (filters: FilterOptions) => void;\n  viewAccountDetail: (account: Account) => void;\n  setCustomDateRange: (\n    startDate: string,\n    endDate: string,\n    label?: string\n  ) => void;\n  isPrivacyMode: boolean;\n  togglePrivacyMode: () => void;\n  accountFilter: 'both' | 'personal' | 'business';\n  setAccountFilter: (filter: 'both' | 'personal' | 'business') => void;\n}\n\nconst FinancialContext = createContext<FinancialContextType | null>(null);\n\nexport const FinancialProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [state, dispatch] = useReducer(financialReducer, initialState);\n  const [isPrivacyMode, setIsPrivacyMode] = useState(false);\n  const [accountFilter, setAccountFilter] = useState<\n    'both' | 'personal' | 'business'\n  >('personal');\n\n  const totalBalance = useMemo(\n    () => state.accounts.reduce((sum, account) => sum + account.balance, 0),\n    [state.accounts]\n  );\n\n  const summary = useMemo((): FinancialSummary => {\n    const today = new Date();\n    let startDate: Date;\n    let endDate: Date;\n    let periodLabel: string;\n\n    // Calculate period boundaries based on selectedPeriod\n    switch (state.selectedPeriod) {\n      case 'day':\n        startDate = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          today.getDate()\n        );\n        endDate = new Date(); // Today\n        periodLabel = 'daily';\n        break;\n      case 'week':\n        const dayOfWeek = today.getDay();\n        const daysToSubtract = dayOfWeek === 0 ? 6 : dayOfWeek - 1; // Monday = 0\n        startDate = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          today.getDate() - daysToSubtract\n        );\n        endDate = new Date(); // Today\n        periodLabel = 'weekly';\n        break;\n      case 'month':\n        startDate = new Date(today.getFullYear(), today.getMonth(), 1);\n        endDate = new Date(); // Today\n        periodLabel = 'monthly';\n        break;\n      case 'quarter':\n        const currentQuarter = Math.floor(today.getMonth() / 3);\n        startDate = new Date(today.getFullYear(), currentQuarter * 3, 1);\n        endDate = new Date(); // Today\n        periodLabel = 'quarterly';\n        break;\n      case 'year':\n        startDate = new Date(today.getFullYear(), 0, 1);\n        endDate = new Date(); // Today\n        periodLabel = 'yearly';\n        break;\n      case '5year':\n        startDate = new Date(today.getFullYear() - 5, 0, 1);\n        endDate = new Date(); // Today\n        periodLabel = '5-year';\n        break;\n      case 'custom':\n        if (state.customDateRange) {\n          startDate = new Date(state.customDateRange.startDate);\n          endDate = new Date(state.customDateRange.endDate);\n          periodLabel = state.customDateRange.label || 'custom';\n        } else {\n          startDate = new Date(today.getFullYear(), today.getMonth(), 1);\n          endDate = new Date(); // Today\n          periodLabel = 'monthly';\n        }\n        break;\n      default:\n        startDate = new Date(today.getFullYear(), today.getMonth(), 1);\n        endDate = new Date(); // Today\n        periodLabel = 'monthly';\n    }\n\n    // Filter transactions for the selected period\n    const periodTransactions = state.transactions.filter((txn) => {\n      const txnDate = new Date(txn.date);\n      return txnDate >= startDate && txnDate <= endDate;\n    });\n\n    const periodIncome = periodTransactions\n      .filter((txn) => txn.amount > 0)\n      .reduce((sum, txn) => sum + txn.amount, 0);\n\n    const periodExpenses = Math.abs(\n      periodTransactions\n        .filter((txn) => txn.amount < 0)\n        .reduce((sum, txn) => sum + txn.amount, 0)\n    );\n\n    const savingsRate =\n      periodIncome > 0 ? (periodIncome - periodExpenses) / periodIncome : 0;\n\n    // Calculate previous period for comparison\n    let prevStartDate: Date;\n    switch (state.selectedPeriod) {\n      case 'day':\n        prevStartDate = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          today.getDate() - 1\n        );\n        break;\n      case 'week':\n        const prevWeekDaysToSubtract =\n          (today.getDay() === 0 ? 6 : today.getDay() - 1) + 7;\n        prevStartDate = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          today.getDate() - prevWeekDaysToSubtract\n        );\n        break;\n      case 'month':\n        prevStartDate = new Date(today.getFullYear(), today.getMonth() - 1, 1);\n        break;\n      case 'quarter':\n        const prevQuarter = Math.floor(today.getMonth() / 3) - 1;\n        prevStartDate =\n          prevQuarter >= 0\n            ? new Date(today.getFullYear(), prevQuarter * 3, 1)\n            : new Date(today.getFullYear() - 1, 9, 1); // Q4 of previous year\n        break;\n      case 'year':\n        prevStartDate = new Date(today.getFullYear() - 1, 0, 1);\n        break;\n      case '5year':\n        prevStartDate = new Date(today.getFullYear() - 10, 0, 1);\n        break;\n      default:\n        prevStartDate = new Date(today.getFullYear(), today.getMonth() - 1, 1);\n    }\n\n    const prevEndDate = new Date(startDate.getTime() - 1); // Day before current period starts\n\n    const prevPeriodTransactions = state.transactions.filter((txn) => {\n      const txnDate = new Date(txn.date);\n      return txnDate >= prevStartDate && txnDate <= prevEndDate;\n    });\n\n    const prevPeriodIncome = prevPeriodTransactions\n      .filter((txn) => txn.amount > 0)\n      .reduce((sum, txn) => sum + txn.amount, 0);\n\n    const prevPeriodExpenses = Math.abs(\n      prevPeriodTransactions\n        .filter((txn) => txn.amount < 0)\n        .reduce((sum, txn) => sum + txn.amount, 0)\n    );\n\n    return {\n      totalBalance,\n      monthlyIncome: Math.round(periodIncome * 100) / 100,\n      monthlyExpenses: Math.round(periodExpenses * 100) / 100,\n      netWorth: totalBalance,\n      debtToIncomeRatio: periodIncome > 0 ? periodExpenses / periodIncome : 0,\n      savingsRate: Math.max(0, savingsRate),\n      // Add comparison data for trends\n      previousPeriodIncome: prevPeriodIncome,\n      previousPeriodExpenses: prevPeriodExpenses,\n      periodLabel,\n    };\n  }, [state.transactions, totalBalance, state.selectedPeriod, state.customDateRange]);\n\n  const selectAccount = (account: Account | null) => {\n    dispatch({ type: 'SELECT_ACCOUNT', payload: account });\n  };\n\n  const changeScreen = (screen: 'dashboard' | 'accounts' | 'transactions') => {\n    dispatch({ type: 'CHANGE_SCREEN', payload: screen });\n  };\n\n  const changePeriod = (period: TimePeriod) => {\n    dispatch({ type: 'CHANGE_PERIOD', payload: period });\n  };\n\n  const addTag = (transactionId: string, tag: string) => {\n    dispatch({ type: 'ADD_TAG', payload: { transactionId, tag } });\n  };\n\n  const removeTag = (transactionId: string, tag: string) => {\n    dispatch({ type: 'REMOVE_TAG', payload: { transactionId, tag } });\n  };\n\n  const applyFilters = (filters: FilterOptions) => {\n    dispatch({ type: 'APPLY_FILTERS', payload: filters });\n  };\n\n  const viewAccountDetail = (account: Account) => {\n    dispatch({ type: 'VIEW_ACCOUNT_DETAIL', payload: account });\n  };\n\n  const setCustomDateRange = (\n    startDate: string,\n    endDate: string,\n    label?: string\n  ) => {\n    dispatch({\n      type: 'SET_CUSTOM_DATE_RANGE',\n      payload: {\n        startDate,\n        endDate,\n        label: label || 'Custom Range',\n      },\n    });\n  };\n\n  const togglePrivacyMode = () => {\n    setIsPrivacyMode(!isPrivacyMode);\n  };\n\n  const value: FinancialContextType = {\n    state,\n    dispatch,\n    totalBalance,\n    summary,\n    selectAccount,\n    changeScreen,\n    changePeriod,\n    addTag,\n    removeTag,\n    applyFilters,\n    viewAccountDetail,\n    setCustomDateRange,\n    isPrivacyMode,\n    togglePrivacyMode,\n    accountFilter,\n    setAccountFilter,\n  };\n\n  return (\n    <FinancialContext.Provider value={value}>\n      {children}\n    </FinancialContext.Provider>\n  );\n};\n\nexport const useFinancial = (): FinancialContextType => {\n  const context = useContext(FinancialContext);\n  if (!context) {\n    throw new Error('useFinancial must be used within a FinancialProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}