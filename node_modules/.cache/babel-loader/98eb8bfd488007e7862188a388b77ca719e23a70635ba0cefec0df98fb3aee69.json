{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X2DHHWAN\\\\Desktop\\\\Finance-App\\\\src\\\\components\\\\dashboard\\\\KPISection.tsx\";\n// Update the KPISection component in src/components/dashboard/KPISection.tsx\n\nimport React from 'react';\nimport { KPICard } from '../ui/KPICard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const KPISection = ({\n  summary,\n  totalBalance,\n  period,\n  budgets = [],\n  balanceTrend = [],\n  incomeTrend = [],\n  expenseTrend = [],\n  savingsTrend = []\n}) => {\n  // Dynamic titles based on period\n  const getPeriodLabel = period => {\n    switch (period) {\n      case 'day':\n        return 'Daily';\n      case 'week':\n        return 'Weekly';\n      case 'month':\n        return 'Monthly';\n      case 'quarter':\n        return 'Quarterly';\n      case 'year':\n        return 'Yearly';\n      case '5year':\n        return '5-Year';\n      default:\n        return 'Monthly';\n    }\n  };\n  const periodLabel = getPeriodLabel(period);\n\n  // Calculate trend changes (mock for now, but you could calculate real trends)\n  const calculateTrendChange = (current, previous) => {\n    if (previous === 0) return current > 0 ? 100 : 0;\n    return (current - previous) / previous * 100;\n  };\n\n  // Calculate previous period data for trend calculation\n  const prevIncome = summary.previousPeriodIncome || summary.monthlyIncome * 0.9;\n  const prevExpenses = summary.previousPeriodExpenses || summary.monthlyExpenses * 1.1;\n  const prevBalance = totalBalance * 0.95; // Mock previous balance\n\n  // Calculate value changes\n  const balanceValueChange = totalBalance - prevBalance;\n  const incomeValueChange = summary.monthlyIncome - prevIncome;\n  const expenseValueChange = summary.monthlyExpenses - prevExpenses;\n  const savingsValueChange = summary.savingsRate * 100 - (prevIncome > 0 ? (prevIncome - prevExpenses) / prevIncome : 0) * 100;\n\n  // Calculate budget metrics\n  const activeBudgets = budgets.filter(budget => budget.isActive);\n  const totalBudgeted = activeBudgets.reduce((sum, budget) => sum + budget.amount, 0);\n  const totalSpent = activeBudgets.reduce((sum, budget) => sum + budget.spent, 0);\n  const overBudgetCategories = activeBudgets.filter(budget => budget.spent > budget.amount).length;\n  const budgetUtilization = totalBudgeted > 0 ? totalSpent / totalBudgeted * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(KPICard, {\n        title: \"Total Balance\",\n        value: totalBalance,\n        change: calculateTrendChange(totalBalance, prevBalance),\n        valueChange: balanceValueChange,\n        isPositive: totalBalance >= prevBalance,\n        color: totalBalance < 0 ? 'red' : 'green',\n        trendData: balanceTrend,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n        title: `Income (${periodLabel})`,\n        value: summary.monthlyIncome,\n        change: calculateTrendChange(summary.monthlyIncome, prevIncome),\n        valueChange: incomeValueChange,\n        isPositive: summary.monthlyIncome >= prevIncome,\n        color: \"green\",\n        trendData: incomeTrend,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n        title: `Spending (${periodLabel})`,\n        value: summary.monthlyExpenses,\n        change: calculateTrendChange(summary.monthlyExpenses, prevExpenses),\n        valueChange: expenseValueChange,\n        isPositive: summary.monthlyExpenses <= prevExpenses // Lower spending is better\n        ,\n        color: \"red\",\n        trendData: expenseTrend,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n        title: \"Savings Rate\",\n        value: summary.savingsRate * 100,\n        change: 2.1 // Mock change for now\n        ,\n        valueChange: savingsValueChange,\n        isPositive: true,\n        isCurrency: false,\n        color: \"blue\",\n        trendData: savingsTrend,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), activeBudgets.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-4\",\n        children: \"Budget Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(KPICard, {\n          title: \"Total Budgeted\",\n          value: totalBudgeted,\n          change: 0 // No change calculation for now\n          ,\n          valueChange: 0,\n          isPositive: true,\n          color: \"blue\",\n          period: period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n          title: \"Total Spent\",\n          value: totalSpent,\n          change: 0,\n          valueChange: 0,\n          isPositive: totalSpent <= totalBudgeted,\n          color: totalSpent > totalBudgeted ? 'red' : 'green',\n          period: period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n          title: \"Budget Utilization\",\n          value: budgetUtilization,\n          change: 0,\n          valueChange: 0,\n          isPositive: budgetUtilization <= 100,\n          isCurrency: false,\n          color: budgetUtilization > 100 ? 'red' : budgetUtilization > 80 ? 'orange' : 'green',\n          period: period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n          title: \"Over Budget Categories\",\n          value: overBudgetCategories,\n          change: 0,\n          valueChange: 0,\n          isPositive: overBudgetCategories === 0,\n          isCurrency: false,\n          color: overBudgetCategories > 0 ? 'red' : 'green',\n          period: period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c = KPISection;\nvar _c;\n$RefreshReg$(_c, \"KPISection\");","map":{"version":3,"names":["React","KPICard","jsxDEV","_jsxDEV","KPISection","summary","totalBalance","period","budgets","balanceTrend","incomeTrend","expenseTrend","savingsTrend","getPeriodLabel","periodLabel","calculateTrendChange","current","previous","prevIncome","previousPeriodIncome","monthlyIncome","prevExpenses","previousPeriodExpenses","monthlyExpenses","prevBalance","balanceValueChange","incomeValueChange","expenseValueChange","savingsValueChange","savingsRate","activeBudgets","filter","budget","isActive","totalBudgeted","reduce","sum","amount","totalSpent","spent","overBudgetCategories","length","budgetUtilization","children","className","title","value","change","valueChange","isPositive","color","trendData","fileName","_jsxFileName","lineNumber","columnNumber","isCurrency","_c","$RefreshReg$"],"sources":["C:/Users/X2DHHWAN/Desktop/Finance-App/src/components/dashboard/KPISection.tsx"],"sourcesContent":["// Update the KPISection component in src/components/dashboard/KPISection.tsx\r\n\r\nimport React from 'react';\r\nimport { KPICard } from '../ui/KPICard';\r\nimport { FinancialSummary, TimePeriod, Budget } from '../../types/financial';\r\n\r\ninterface KPISectionProps {\r\n  summary: FinancialSummary;\r\n  totalBalance: number;\r\n  period: TimePeriod;\r\n  budgets?: Budget[];\r\n  balanceTrend?: number[];\r\n  incomeTrend?: number[];\r\n  expenseTrend?: number[];\r\n  savingsTrend?: number[];\r\n}\r\n\r\nexport const KPISection: React.FC<KPISectionProps> = ({\r\n  summary,\r\n  totalBalance,\r\n  period,\r\n  budgets = [],\r\n  balanceTrend = [],\r\n  incomeTrend = [],\r\n  expenseTrend = [],\r\n  savingsTrend = [],\r\n}) => {\r\n  // Dynamic titles based on period\r\n  const getPeriodLabel = (period: TimePeriod): string => {\r\n    switch (period) {\r\n      case 'day':\r\n        return 'Daily';\r\n      case 'week':\r\n        return 'Weekly';\r\n      case 'month':\r\n        return 'Monthly';\r\n      case 'quarter':\r\n        return 'Quarterly';\r\n      case 'year':\r\n        return 'Yearly';\r\n      case '5year':\r\n        return '5-Year';\r\n      default:\r\n        return 'Monthly';\r\n    }\r\n  };\r\n\r\n  const periodLabel = getPeriodLabel(period);\r\n\r\n  // Calculate trend changes (mock for now, but you could calculate real trends)\r\n  const calculateTrendChange = (current: number, previous: number): number => {\r\n    if (previous === 0) return current > 0 ? 100 : 0;\r\n    return ((current - previous) / previous) * 100;\r\n  };\r\n\r\n  // Calculate previous period data for trend calculation\r\n  const prevIncome =\r\n    summary.previousPeriodIncome || summary.monthlyIncome * 0.9;\r\n  const prevExpenses =\r\n    summary.previousPeriodExpenses || summary.monthlyExpenses * 1.1;\r\n  const prevBalance = totalBalance * 0.95; // Mock previous balance\r\n\r\n  // Calculate value changes\r\n  const balanceValueChange = totalBalance - prevBalance;\r\n  const incomeValueChange = summary.monthlyIncome - prevIncome;\r\n  const expenseValueChange = summary.monthlyExpenses - prevExpenses;\r\n  const savingsValueChange =\r\n    summary.savingsRate * 100 -\r\n    (prevIncome > 0 ? (prevIncome - prevExpenses) / prevIncome : 0) * 100;\r\n\r\n  // Calculate budget metrics\r\n  const activeBudgets = budgets.filter(budget => budget.isActive);\r\n  const totalBudgeted = activeBudgets.reduce((sum, budget) => sum + budget.amount, 0);\r\n  const totalSpent = activeBudgets.reduce((sum, budget) => sum + budget.spent, 0);\r\n  const overBudgetCategories = activeBudgets.filter(budget => budget.spent > budget.amount).length;\r\n  const budgetUtilization = totalBudgeted > 0 ? (totalSpent / totalBudgeted) * 100 : 0;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-4\">\r\n        <KPICard\r\n          title=\"Total Balance\"\r\n          value={totalBalance}\r\n          change={calculateTrendChange(totalBalance, prevBalance)}\r\n          valueChange={balanceValueChange}\r\n          isPositive={totalBalance >= prevBalance}\r\n          color={totalBalance < 0 ? 'red' : 'green'}\r\n          trendData={balanceTrend}\r\n          period={period}\r\n        />\r\n\r\n        <KPICard\r\n          title={`Income (${periodLabel})`}\r\n          value={summary.monthlyIncome}\r\n          change={calculateTrendChange(summary.monthlyIncome, prevIncome)}\r\n          valueChange={incomeValueChange}\r\n          isPositive={summary.monthlyIncome >= prevIncome}\r\n          color=\"green\"\r\n          trendData={incomeTrend}\r\n          period={period}\r\n        />\r\n\r\n        <KPICard\r\n          title={`Spending (${periodLabel})`}\r\n          value={summary.monthlyExpenses}\r\n          change={calculateTrendChange(summary.monthlyExpenses, prevExpenses)}\r\n          valueChange={expenseValueChange}\r\n          isPositive={summary.monthlyExpenses <= prevExpenses} // Lower spending is better\r\n          color=\"red\"\r\n          trendData={expenseTrend}\r\n          period={period}\r\n        />\r\n\r\n        <KPICard\r\n          title=\"Savings Rate\"\r\n          value={summary.savingsRate * 100}\r\n          change={2.1} // Mock change for now\r\n          valueChange={savingsValueChange}\r\n          isPositive={true}\r\n          isCurrency={false}\r\n          color=\"blue\"\r\n          trendData={savingsTrend}\r\n          period={period}\r\n        />\r\n      </div>\r\n\r\n      {/* Budget KPIs - Show only if there are active budgets */}\r\n      {activeBudgets.length > 0 && (\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Budget Overview</h3>\r\n          <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-4\">\r\n            <KPICard\r\n              title=\"Total Budgeted\"\r\n              value={totalBudgeted}\r\n              change={0} // No change calculation for now\r\n              valueChange={0}\r\n              isPositive={true}\r\n              color=\"blue\"\r\n              period={period}\r\n            />\r\n\r\n            <KPICard\r\n              title=\"Total Spent\"\r\n              value={totalSpent}\r\n              change={0}\r\n              valueChange={0}\r\n              isPositive={totalSpent <= totalBudgeted}\r\n              color={totalSpent > totalBudgeted ? 'red' : 'green'}\r\n              period={period}\r\n            />\r\n\r\n            <KPICard\r\n              title=\"Budget Utilization\"\r\n              value={budgetUtilization}\r\n              change={0}\r\n              valueChange={0}\r\n              isPositive={budgetUtilization <= 100}\r\n              isCurrency={false}\r\n              color={budgetUtilization > 100 ? 'red' : budgetUtilization > 80 ? 'orange' : 'green'}\r\n              period={period}\r\n            />\r\n\r\n            <KPICard\r\n              title=\"Over Budget Categories\"\r\n              value={overBudgetCategories}\r\n              change={0}\r\n              valueChange={0}\r\n              isPositive={overBudgetCategories === 0}\r\n              isCurrency={false}\r\n              color={overBudgetCategories > 0 ? 'red' : 'green'}\r\n              period={period}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}