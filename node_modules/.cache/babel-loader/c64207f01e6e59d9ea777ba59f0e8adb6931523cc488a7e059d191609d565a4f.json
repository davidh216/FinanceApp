{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dliz1\\\\Desktop\\\\FinanceApp\\\\src\\\\components\\\\dashboard\\\\KPISection.tsx\";\n// Update the KPISection component in src/components/dashboard/KPISection.tsx\n\nimport React from 'react';\nimport { KPICard } from '../ui/KPICard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const KPISection = ({\n  summary,\n  totalBalance,\n  period,\n  trendData = []\n}) => {\n  // Dynamic titles based on period\n  const getPeriodLabel = period => {\n    switch (period) {\n      case 'day':\n        return 'Daily';\n      case 'week':\n        return 'Weekly';\n      case 'month':\n        return 'Monthly';\n      case 'quarter':\n        return 'Quarterly';\n      case 'year':\n        return 'Yearly';\n      case '5year':\n        return '5-Year';\n      default:\n        return 'Monthly';\n    }\n  };\n  const periodLabel = getPeriodLabel(period);\n\n  // Calculate trend changes (mock for now, but you could calculate real trends)\n  const calculateTrendChange = (current, previous) => {\n    if (previous === 0) return current > 0 ? 100 : 0;\n    return (current - previous) / previous * 100;\n  };\n\n  // Mock previous period data for trend calculation\n  const prevIncome = summary.previousPeriodIncome || summary.monthlyIncome * 0.9;\n  const prevExpenses = summary.previousPeriodExpenses || summary.monthlyExpenses * 1.1;\n  const prevBalance = totalBalance * 0.95; // Mock previous balance\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(KPICard, {\n        title: \"Total Balance\",\n        value: totalBalance,\n        change: calculateTrendChange(totalBalance, prevBalance),\n        isPositive: totalBalance >= prevBalance,\n        color: totalBalance < 0 ? 'red' : 'green',\n        trendData: trendData,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n        title: `Income (${periodLabel})`,\n        value: summary.monthlyIncome,\n        change: calculateTrendChange(summary.monthlyIncome, prevIncome),\n        isPositive: summary.monthlyIncome >= prevIncome,\n        color: \"green\",\n        trendData: trendData,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n        title: `Spending (${periodLabel})`,\n        value: summary.monthlyExpenses,\n        change: calculateTrendChange(summary.monthlyExpenses, prevExpenses),\n        isPositive: summary.monthlyExpenses <= prevExpenses // Lower spending is better\n        ,\n        color: \"red\",\n        trendData: trendData,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KPICard, {\n        title: \"Savings Rate\",\n        value: summary.savingsRate * 100,\n        change: 2.1 // Mock change for now\n        ,\n        isPositive: true,\n        isCurrency: false,\n        color: \"blue\",\n        trendData: trendData,\n        period: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = KPISection;\nvar _c;\n$RefreshReg$(_c, \"KPISection\");","map":{"version":3,"names":["React","KPICard","jsxDEV","_jsxDEV","KPISection","summary","totalBalance","period","trendData","getPeriodLabel","periodLabel","calculateTrendChange","current","previous","prevIncome","previousPeriodIncome","monthlyIncome","prevExpenses","previousPeriodExpenses","monthlyExpenses","prevBalance","children","className","title","value","change","isPositive","color","fileName","_jsxFileName","lineNumber","columnNumber","savingsRate","isCurrency","_c","$RefreshReg$"],"sources":["C:/Users/dliz1/Desktop/FinanceApp/src/components/dashboard/KPISection.tsx"],"sourcesContent":["// Update the KPISection component in src/components/dashboard/KPISection.tsx\n\nimport React from 'react';\nimport { KPICard } from '../ui/KPICard';\nimport { FinancialSummary, TimePeriod } from '../../types/financial';\n\ninterface KPISectionProps {\n  summary: FinancialSummary;\n  totalBalance: number;\n  period: TimePeriod;\n  trendData?: number[];\n}\n\nexport const KPISection: React.FC<KPISectionProps> = ({\n  summary,\n  totalBalance,\n  period,\n  trendData = [],\n}) => {\n  // Dynamic titles based on period\n  const getPeriodLabel = (period: TimePeriod): string => {\n    switch (period) {\n      case 'day': return 'Daily';\n      case 'week': return 'Weekly';\n      case 'month': return 'Monthly';\n      case 'quarter': return 'Quarterly';\n      case 'year': return 'Yearly';\n      case '5year': return '5-Year';\n      default: return 'Monthly';\n    }\n  };\n\n  const periodLabel = getPeriodLabel(period);\n\n  // Calculate trend changes (mock for now, but you could calculate real trends)\n  const calculateTrendChange = (current: number, previous: number): number => {\n    if (previous === 0) return current > 0 ? 100 : 0;\n    return ((current - previous) / previous) * 100;\n  };\n\n  // Mock previous period data for trend calculation\n  const prevIncome = summary.previousPeriodIncome || summary.monthlyIncome * 0.9;\n  const prevExpenses = summary.previousPeriodExpenses || summary.monthlyExpenses * 1.1;\n  const prevBalance = totalBalance * 0.95; // Mock previous balance\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <KPICard\n          title=\"Total Balance\"\n          value={totalBalance}\n          change={calculateTrendChange(totalBalance, prevBalance)}\n          isPositive={totalBalance >= prevBalance}\n          color={totalBalance < 0 ? 'red' : 'green'}\n          trendData={trendData}\n          period={period}\n        />\n\n        <KPICard\n          title={`Income (${periodLabel})`}\n          value={summary.monthlyIncome}\n          change={calculateTrendChange(summary.monthlyIncome, prevIncome)}\n          isPositive={summary.monthlyIncome >= prevIncome}\n          color=\"green\"\n          trendData={trendData}\n          period={period}\n        />\n\n        <KPICard\n          title={`Spending (${periodLabel})`}\n          value={summary.monthlyExpenses}\n          change={calculateTrendChange(summary.monthlyExpenses, prevExpenses)}\n          isPositive={summary.monthlyExpenses <= prevExpenses} // Lower spending is better\n          color=\"red\"\n          trendData={trendData}\n          period={period}\n        />\n\n        <KPICard\n          title=\"Savings Rate\"\n          value={summary.savingsRate * 100}\n          change={2.1} // Mock change for now\n          isPositive={true}\n          isCurrency={false}\n          color=\"blue\"\n          trendData={trendData}\n          period={period}\n        />\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}