{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X2DHHWAN\\\\Desktop\\\\Finance-App\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { getDoc, setDoc } from 'firebase/firestore';\nimport { signInWithGoogle, signOutUser, onAuthStateChange, getUserDocRef } from '../config/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [firebaseUser, setFirebaseUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Convert Firebase user to our User type\n  const convertFirebaseUserToUser = firebaseUser => {\n    return {\n      id: firebaseUser.uid,\n      email: firebaseUser.email || '',\n      name: firebaseUser.displayName || '',\n      phone: firebaseUser.phoneNumber || undefined,\n      avatar: firebaseUser.photoURL || undefined,\n      bio: '',\n      isActive: true,\n      createdAt: firebaseUser.metadata.creationTime || new Date().toISOString(),\n      updatedAt: firebaseUser.metadata.lastSignInTime || new Date().toISOString()\n    };\n  };\n\n  // Create or update user document in Firestore\n  const createOrUpdateUserDocument = async firebaseUser => {\n    const userRef = getUserDocRef(firebaseUser.uid);\n    const userSnap = await getDoc(userRef);\n    if (!userSnap.exists()) {\n      // Create new user document\n      const userData = convertFirebaseUserToUser(firebaseUser);\n      await setDoc(userRef, userData);\n      return userData;\n    } else {\n      // Update existing user document\n      const userData = userSnap.data();\n      const updatedUserData = {\n        ...userData,\n        email: firebaseUser.email || userData.email,\n        name: firebaseUser.displayName || userData.name,\n        phone: firebaseUser.phoneNumber || userData.phone,\n        avatar: firebaseUser.photoURL || userData.avatar,\n        updatedAt: new Date().toISOString()\n      };\n      await setDoc(userRef, updatedUserData);\n      return updatedUserData;\n    }\n  };\n\n  // Handle authentication state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChange(async firebaseUser => {\n      setFirebaseUser(firebaseUser);\n      if (firebaseUser) {\n        try {\n          const userData = await createOrUpdateUserDocument(firebaseUser);\n          setCurrentUser(userData);\n        } catch (error) {\n          console.error('Error creating/updating user document:', error);\n          // Fallback to basic user data\n          setCurrentUser(convertFirebaseUserToUser(firebaseUser));\n        }\n      } else {\n        setCurrentUser(null);\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Sign in with Google\n  const handleSignInWithGoogle = async () => {\n    try {\n      setLoading(true);\n      await signInWithGoogle();\n    } catch (error) {\n      console.error('Error signing in with Google:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Sign out\n  const handleSignOut = async () => {\n    try {\n      setLoading(true);\n      await signOutUser();\n      setCurrentUser(null);\n    } catch (error) {\n      console.error('Error signing out:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update user profile\n  const updateUserProfile = async updates => {\n    if (!currentUser) {\n      throw new Error('No user logged in');\n    }\n    try {\n      const userRef = getUserDocRef(currentUser.id);\n      const updatedUserData = {\n        ...currentUser,\n        ...updates,\n        updatedAt: new Date().toISOString()\n      };\n      await setDoc(userRef, updatedUserData);\n      setCurrentUser(updatedUserData);\n    } catch (error) {\n      console.error('Error updating user profile:', error);\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    firebaseUser,\n    loading,\n    signInWithGoogle: handleSignInWithGoogle,\n    signOut: handleSignOut,\n    updateUserProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"vGyLl1g/TTlc+eFqiiFhtUFYIvs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","getDoc","setDoc","signInWithGoogle","signOutUser","onAuthStateChange","getUserDocRef","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","firebaseUser","setFirebaseUser","loading","setLoading","convertFirebaseUserToUser","id","uid","email","name","displayName","phone","phoneNumber","undefined","avatar","photoURL","bio","isActive","createdAt","metadata","creationTime","Date","toISOString","updatedAt","lastSignInTime","createOrUpdateUserDocument","userRef","userSnap","exists","userData","data","updatedUserData","unsubscribe","error","console","handleSignInWithGoogle","handleSignOut","updateUserProfile","updates","value","signOut","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/X2DHHWAN/Desktop/Finance-App/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { User as FirebaseUser } from 'firebase/auth';\r\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\r\nimport { auth, db, signInWithGoogle, signOutUser, onAuthStateChange, getUserDocRef } from '../config/firebase';\r\nimport { User } from '../types/financial';\r\n\r\ninterface AuthContextType {\r\n  currentUser: User | null;\r\n  firebaseUser: FirebaseUser | null;\r\n  loading: boolean;\r\n  signInWithGoogle: () => Promise<void>;\r\n  signOut: () => Promise<void>;\r\n  updateUserProfile: (updates: Partial<User>) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n  const [firebaseUser, setFirebaseUser] = useState<FirebaseUser | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Convert Firebase user to our User type\r\n  const convertFirebaseUserToUser = (firebaseUser: FirebaseUser): User => {\r\n    return {\r\n      id: firebaseUser.uid,\r\n      email: firebaseUser.email || '',\r\n      name: firebaseUser.displayName || '',\r\n      phone: firebaseUser.phoneNumber || undefined,\r\n      avatar: firebaseUser.photoURL || undefined,\r\n      bio: '',\r\n      isActive: true,\r\n      createdAt: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n      updatedAt: firebaseUser.metadata.lastSignInTime || new Date().toISOString(),\r\n    };\r\n  };\r\n\r\n  // Create or update user document in Firestore\r\n  const createOrUpdateUserDocument = async (firebaseUser: FirebaseUser) => {\r\n    const userRef = getUserDocRef(firebaseUser.uid);\r\n    const userSnap = await getDoc(userRef);\r\n\r\n    if (!userSnap.exists()) {\r\n      // Create new user document\r\n      const userData = convertFirebaseUserToUser(firebaseUser);\r\n      await setDoc(userRef, userData);\r\n      return userData;\r\n    } else {\r\n      // Update existing user document\r\n      const userData = userSnap.data() as User;\r\n      const updatedUserData = {\r\n        ...userData,\r\n        email: firebaseUser.email || userData.email,\r\n        name: firebaseUser.displayName || userData.name,\r\n        phone: firebaseUser.phoneNumber || userData.phone,\r\n        avatar: firebaseUser.photoURL || userData.avatar,\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      await setDoc(userRef, updatedUserData);\r\n      return updatedUserData;\r\n    }\r\n  };\r\n\r\n  // Handle authentication state changes\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChange(async (firebaseUser) => {\r\n      setFirebaseUser(firebaseUser);\r\n      \r\n      if (firebaseUser) {\r\n        try {\r\n          const userData = await createOrUpdateUserDocument(firebaseUser);\r\n          setCurrentUser(userData);\r\n        } catch (error) {\r\n          console.error('Error creating/updating user document:', error);\r\n          // Fallback to basic user data\r\n          setCurrentUser(convertFirebaseUserToUser(firebaseUser));\r\n        }\r\n      } else {\r\n        setCurrentUser(null);\r\n      }\r\n      \r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  // Sign in with Google\r\n  const handleSignInWithGoogle = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      console.error('Error signing in with Google:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Sign out\r\n  const handleSignOut = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await signOutUser();\r\n      setCurrentUser(null);\r\n    } catch (error) {\r\n      console.error('Error signing out:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update user profile\r\n  const updateUserProfile = async (updates: Partial<User>) => {\r\n    if (!currentUser) {\r\n      throw new Error('No user logged in');\r\n    }\r\n\r\n    try {\r\n      const userRef = getUserDocRef(currentUser.id);\r\n      const updatedUserData = {\r\n        ...currentUser,\r\n        ...updates,\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      \r\n      await setDoc(userRef, updatedUserData);\r\n      setCurrentUser(updatedUserData);\r\n    } catch (error) {\r\n      console.error('Error updating user profile:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    currentUser,\r\n    firebaseUser,\r\n    loading,\r\n    signInWithGoogle: handleSignInWithGoogle,\r\n    signOut: handleSignOut,\r\n    updateUserProfile,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}