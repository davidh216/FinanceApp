{"ast":null,"code":"import React,{Suspense,useEffect}from'react';import'./App.css';import{FinancialProvider}from'./contexts/FinancialContext';import{AuthProvider}from'./contexts/AuthContext';import{ErrorBoundary}from'./components/ErrorBoundary';import{FullScreenSpinner}from'./components/ui/LoadingSpinner';import{ProtectedRoute,AuthPage}from'./components/auth';import{registerServiceWorker,addOnlineListener,addOfflineListener}from'./utils/serviceWorker';// Lazy load components for code splitting\nimport{jsx as _jsx}from\"react/jsx-runtime\";const Dashboard=/*#__PURE__*/React.lazy(()=>import('./components/dashboard/Dashboard').then(module=>({default:module.Dashboard})));function App(){// Register service worker for offline support\nuseEffect(()=>{registerServiceWorker();// Add online/offline listeners\nconst handleOnline=()=>{console.log('App is online');// You can trigger data sync here\n};const handleOffline=()=>{console.log('App is offline');// You can show offline indicator here\n};addOnlineListener(handleOnline);addOfflineListener(handleOffline);// Cleanup listeners\nreturn()=>{addOnlineListener(handleOnline);addOfflineListener(handleOffline);};},[]);return/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(FinancialProvider,{children:/*#__PURE__*/_jsx(ProtectedRoute,{fallback:/*#__PURE__*/_jsx(AuthPage,{}),children:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(FullScreenSpinner,{text:\"Loading Dashboard...\"}),children:/*#__PURE__*/_jsx(Dashboard,{})})})})})});}export default App;","map":{"version":3,"names":["React","Suspense","useEffect","FinancialProvider","AuthProvider","ErrorBoundary","FullScreenSpinner","ProtectedRoute","AuthPage","registerServiceWorker","addOnlineListener","addOfflineListener","jsx","_jsx","Dashboard","lazy","then","module","default","App","handleOnline","console","log","handleOffline","children","fallback","text"],"sources":["C:/Users/X2DHHWAN/Desktop/Finance-App/src/App.tsx"],"sourcesContent":["import React, { Suspense, useEffect } from 'react';\r\nimport './App.css';\r\nimport { FinancialProvider } from './contexts/FinancialContext';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport { ErrorBoundary } from './components/ErrorBoundary';\r\nimport { FullScreenSpinner } from './components/ui/LoadingSpinner';\r\nimport { ProtectedRoute, AuthPage } from './components/auth';\r\nimport { registerServiceWorker, addOnlineListener, addOfflineListener } from './utils/serviceWorker';\r\n\r\n// Lazy load components for code splitting\r\nconst Dashboard = React.lazy(() => import('./components/dashboard/Dashboard').then(module => ({ default: module.Dashboard })));\r\n\r\nfunction App() {\r\n  // Register service worker for offline support\r\n  useEffect(() => {\r\n    registerServiceWorker();\r\n    \r\n    // Add online/offline listeners\r\n    const handleOnline = () => {\r\n      console.log('App is online');\r\n      // You can trigger data sync here\r\n    };\r\n    \r\n    const handleOffline = () => {\r\n      console.log('App is offline');\r\n      // You can show offline indicator here\r\n    };\r\n    \r\n    addOnlineListener(handleOnline);\r\n    addOfflineListener(handleOffline);\r\n    \r\n    // Cleanup listeners\r\n    return () => {\r\n      addOnlineListener(handleOnline);\r\n      addOfflineListener(handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <AuthProvider>\r\n        <FinancialProvider>\r\n          <ProtectedRoute fallback={<AuthPage />}>\r\n            <Suspense fallback={<FullScreenSpinner text=\"Loading Dashboard...\" />}>\r\n              <Dashboard />\r\n            </Suspense>\r\n          </ProtectedRoute>\r\n        </FinancialProvider>\r\n      </AuthProvider>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,OAASC,iBAAiB,KAAQ,6BAA6B,CAC/D,OAASC,YAAY,KAAQ,wBAAwB,CACrD,OAASC,aAAa,KAAQ,4BAA4B,CAC1D,OAASC,iBAAiB,KAAQ,gCAAgC,CAClE,OAASC,cAAc,CAAEC,QAAQ,KAAQ,mBAAmB,CAC5D,OAASC,qBAAqB,CAAEC,iBAAiB,CAAEC,kBAAkB,KAAQ,uBAAuB,CAEpG;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,SAAS,cAAGd,KAAK,CAACe,IAAI,CAAC,IAAM,MAAM,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAACC,MAAM,GAAK,CAAEC,OAAO,CAAED,MAAM,CAACH,SAAU,CAAC,CAAC,CAAC,CAAC,CAE9H,QAAS,CAAAK,GAAGA,CAAA,CAAG,CACb;AACAjB,SAAS,CAAC,IAAM,CACdO,qBAAqB,CAAC,CAAC,CAEvB;AACA,KAAM,CAAAW,YAAY,CAAGA,CAAA,GAAM,CACzBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC5B;AACF,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1BF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC7B;AACF,CAAC,CAEDZ,iBAAiB,CAACU,YAAY,CAAC,CAC/BT,kBAAkB,CAACY,aAAa,CAAC,CAEjC;AACA,MAAO,IAAM,CACXb,iBAAiB,CAACU,YAAY,CAAC,CAC/BT,kBAAkB,CAACY,aAAa,CAAC,CACnC,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEV,IAAA,CAACR,aAAa,EAAAmB,QAAA,cACZX,IAAA,CAACT,YAAY,EAAAoB,QAAA,cACXX,IAAA,CAACV,iBAAiB,EAAAqB,QAAA,cAChBX,IAAA,CAACN,cAAc,EAACkB,QAAQ,cAAEZ,IAAA,CAACL,QAAQ,GAAE,CAAE,CAAAgB,QAAA,cACrCX,IAAA,CAACZ,QAAQ,EAACwB,QAAQ,cAAEZ,IAAA,CAACP,iBAAiB,EAACoB,IAAI,CAAC,sBAAsB,CAAE,CAAE,CAAAF,QAAA,cACpEX,IAAA,CAACC,SAAS,GAAE,CAAC,CACL,CAAC,CACG,CAAC,CACA,CAAC,CACR,CAAC,CACF,CAAC,CAEpB,CAEA,cAAe,CAAAK,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}