{"ast":null,"code":"import React,{useMemo}from'react';import{BaseChart}from'./BaseChart';import{BudgetVsActualChart}from'./BudgetVsActualChart';import{processBalanceTrendData,processIncomeExpenseData,processCategorySpendingData,CHART_COLORS}from'../../utils/chartUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ChartFactory=_ref=>{let{chartType,transactions,accounts,period,budgets=[],height=300,className='',onDataPointClick,loading=false,error=null,customOptions={}}=_ref;const chartConfig=useMemo(()=>getChartConfig(chartType,period),[chartType,period]);const chartData=useMemo(()=>{switch(chartType){case'balance':{const dataPoints=processBalanceTrendData(transactions,accounts,period);return{labels:dataPoints.map(point=>point.label),datasets:[{label:'Balance',data:dataPoints.map(point=>point.value),borderColor:CHART_COLORS.primary,backgroundColor:CHART_COLORS.primary+'20',fill:true,tension:0.4}]};}case'income-expense':{const{income,expenses}=processIncomeExpenseData(transactions,period);return{labels:income.map(point=>point.label),datasets:[{label:'Income',data:income.map(point=>point.value),backgroundColor:CHART_COLORS.success,borderColor:CHART_COLORS.success},{label:'Expenses',data:expenses.map(point=>point.value),backgroundColor:CHART_COLORS.danger,borderColor:CHART_COLORS.danger}]};}case'category':{const dataPoints=processCategorySpendingData(transactions,period);return{labels:dataPoints.map(point=>point.label),datasets:[{label:'Spending',data:dataPoints.map(point=>point.value),backgroundColor:dataPoints.map((_,index)=>Object.values(CHART_COLORS)[index%Object.keys(CHART_COLORS).length]),borderColor:dataPoints.map((_,index)=>Object.values(CHART_COLORS)[index%Object.keys(CHART_COLORS).length])}]};}case'budget-vs-actual':// Budget vs actual is handled by dedicated component\nreturn{labels:[],datasets:[]};default:return{labels:[],datasets:[]};}},[chartType,transactions,accounts,period]);const chartOptions=useMemo(()=>{const baseOptions=getBaseOptions(chartType,chartConfig.title);return{...baseOptions,...customOptions};},[chartType,chartConfig.title,customOptions]);const handleChartClick=(event,elements)=>{if(elements.length>0&&onDataPointClick){const dataIndex=elements[0].index;const datasetIndex=elements[0].datasetIndex;// Get the appropriate data point based on chart type\nlet dataPoint;switch(chartType){case'balance':dataPoint=processBalanceTrendData(transactions,accounts,period)[dataIndex];break;case'income-expense':const{income,expenses}=processIncomeExpenseData(transactions,period);dataPoint=datasetIndex===0?income[dataIndex]:expenses[dataIndex];dataPoint.type=datasetIndex===0?'income':'expense';break;case'category':dataPoint=processCategorySpendingData(transactions,period)[dataIndex];break;default:dataPoint=null;}if(dataPoint){onDataPointClick(dataPoint,chartType);}}};// Special handling for budget vs actual chart\nif(chartType==='budget-vs-actual'){return/*#__PURE__*/_jsx(BudgetVsActualChart,{budgets:budgets,transactions:transactions,period:period,height:height,className:className,onDataPointClick:dataPoint=>onDataPointClick===null||onDataPointClick===void 0?void 0:onDataPointClick(dataPoint,chartType),loading:loading,error:error});}if(loading){return/*#__PURE__*/_jsx(\"div\",{className:`bg-white rounded-lg shadow-sm border p-6 ${className}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"animate-pulse\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-4 bg-gray-200 rounded w-1/4 mb-4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-64 bg-gray-200 rounded\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:`bg-white rounded-lg shadow-sm border p-6 ${className}`,children:/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-red-600\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Error loading chart: \",error]})})});}return/*#__PURE__*/_jsx(\"div\",{className:`bg-white rounded-lg shadow-sm border p-6 ${className}`,children:/*#__PURE__*/_jsx(BaseChart,{type:getChartType(chartType),data:chartData,options:chartOptions,height:height,width:\"100%\",onChartClick:handleChartClick,loading:loading,error:error})});};// Helper functions\nconst getChartConfig=(chartType,period)=>{const periodText=period.charAt(0).toUpperCase()+period.slice(1);switch(chartType){case'balance':return{title:'Balance Trend',description:`Shows your account balance over the ${period} period`};case'income-expense':return{title:'Income vs Expenses',description:`Compares your income and expenses for the ${period}`};case'category':return{title:'Spending by Category',description:`Breakdown of your spending by category for the ${period}`};case'budget-vs-actual':return{title:'Budget vs Actual',description:`Shows how your spending compares to your budget for the ${period}`};default:return{title:'Chart',description:'Financial data visualization'};}};const getChartType=chartType=>{switch(chartType){case'balance':return'line';case'income-expense':return'bar';case'category':return'doughnut';case'budget-vs-actual':return'bar';default:return'line';}};const getBaseOptions=(chartType,title)=>{const baseOptions={responsive:true,maintainAspectRatio:false,plugins:{title:{display:false},legend:{position:'bottom',labels:{usePointStyle:true,padding:20,font:{size:12},color:'#374151'}},tooltip:{backgroundColor:'rgba(0, 0, 0, 0.8)',titleColor:'#fff',bodyColor:'#fff',borderColor:'#374151',borderWidth:1,cornerRadius:8,displayColors:true}}};// Add chart-specific options\nswitch(chartType){case'balance':return{...baseOptions,scales:{y:{ticks:{callback:function(value){return'$'+value.toLocaleString();}}}},plugins:{...baseOptions.plugins,tooltip:{...baseOptions.plugins.tooltip,callbacks:{label:function(context){const value=context.parsed.y;return`Balance: $${value.toLocaleString()}`;}}}}};case'income-expense':return{...baseOptions,scales:{x:{grid:{display:false}},y:{beginAtZero:true,grid:{color:'rgba(0, 0, 0, 0.1)'},ticks:{callback:function(value){return'$'+value.toLocaleString();}}}},plugins:{...baseOptions.plugins,tooltip:{...baseOptions.plugins.tooltip,callbacks:{label:function(context){const label=context.dataset.label||'';const value=context.parsed.y;return`${label}: $${value.toLocaleString()}`;}}}}};case'category':return{...baseOptions,plugins:{...baseOptions.plugins,legend:{position:'right',labels:{usePointStyle:true,padding:15,font:{size:11}}},tooltip:{...baseOptions.plugins.tooltip,callbacks:{label:function(context){const label=context.label||'';const value=context.parsed;const total=context.dataset.data.reduce((a,b)=>a+b,0);const percentage=(value/total*100).toFixed(1);return`${label}: $${value.toLocaleString()} (${percentage}%)`;}}}}};default:return baseOptions;}};","map":{"version":3,"names":["React","useMemo","BaseChart","BudgetVsActualChart","processBalanceTrendData","processIncomeExpenseData","processCategorySpendingData","CHART_COLORS","jsx","_jsx","jsxs","_jsxs","ChartFactory","_ref","chartType","transactions","accounts","period","budgets","height","className","onDataPointClick","loading","error","customOptions","chartConfig","getChartConfig","chartData","dataPoints","labels","map","point","label","datasets","data","value","borderColor","primary","backgroundColor","fill","tension","income","expenses","success","danger","_","index","Object","values","keys","length","chartOptions","baseOptions","getBaseOptions","title","handleChartClick","event","elements","dataIndex","datasetIndex","dataPoint","type","children","getChartType","options","width","onChartClick","periodText","charAt","toUpperCase","slice","description","responsive","maintainAspectRatio","plugins","display","legend","position","usePointStyle","padding","font","size","color","tooltip","titleColor","bodyColor","borderWidth","cornerRadius","displayColors","scales","y","ticks","callback","toLocaleString","callbacks","context","parsed","x","grid","beginAtZero","dataset","total","reduce","a","b","percentage","toFixed"],"sources":["C:/Users/X2DHHWAN/Desktop/Finance-App/src/components/charts/ChartFactory.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { Transaction, Account, TimePeriod, Budget } from '../../types/financial';\r\nimport { BaseChart } from './BaseChart';\r\nimport { BudgetVsActualChart } from './BudgetVsActualChart';\r\nimport { \r\n  processBalanceTrendData, \r\n  processIncomeExpenseData, \r\n  processCategorySpendingData,\r\n  CHART_COLORS \r\n} from '../../utils/chartUtils';\r\n\r\nexport type ChartType = 'balance' | 'income-expense' | 'category' | 'budget-vs-actual';\r\n\r\nexport interface ChartConfig {\r\n  type: ChartType;\r\n  title: string;\r\n  description: string;\r\n  height?: number;\r\n  width?: string | number;\r\n  className?: string;\r\n  options?: any;\r\n}\r\n\r\nexport interface ChartFactoryProps {\r\n  chartType: ChartType;\r\n  transactions: Transaction[];\r\n  accounts: Account[];\r\n  period: TimePeriod;\r\n  budgets?: Budget[];\r\n  height?: number;\r\n  className?: string;\r\n  onDataPointClick?: (dataPoint: any, chartType: ChartType) => void;\r\n  loading?: boolean;\r\n  error?: string | null;\r\n  customOptions?: any;\r\n}\r\n\r\nexport const ChartFactory: React.FC<ChartFactoryProps> = ({\r\n  chartType,\r\n  transactions,\r\n  accounts,\r\n  period,\r\n  budgets = [],\r\n  height = 300,\r\n  className = '',\r\n  onDataPointClick,\r\n  loading = false,\r\n  error = null,\r\n  customOptions = {},\r\n}) => {\r\n  const chartConfig = useMemo(() => getChartConfig(chartType, period), [chartType, period]);\r\n\r\n  const chartData = useMemo(() => {\r\n    switch (chartType) {\r\n      case 'balance': {\r\n        const dataPoints = processBalanceTrendData(transactions, accounts, period);\r\n        return {\r\n          labels: dataPoints.map(point => point.label),\r\n          datasets: [{\r\n            label: 'Balance',\r\n            data: dataPoints.map(point => point.value),\r\n            borderColor: CHART_COLORS.primary,\r\n            backgroundColor: CHART_COLORS.primary + '20',\r\n            fill: true,\r\n            tension: 0.4,\r\n          }]\r\n        };\r\n      }\r\n      case 'income-expense': {\r\n        const { income, expenses } = processIncomeExpenseData(transactions, period);\r\n        return {\r\n          labels: income.map(point => point.label),\r\n          datasets: [\r\n            {\r\n              label: 'Income',\r\n              data: income.map(point => point.value),\r\n              backgroundColor: CHART_COLORS.success,\r\n              borderColor: CHART_COLORS.success,\r\n            },\r\n            {\r\n              label: 'Expenses',\r\n              data: expenses.map(point => point.value),\r\n              backgroundColor: CHART_COLORS.danger,\r\n              borderColor: CHART_COLORS.danger,\r\n            }\r\n          ]\r\n        };\r\n      }\r\n      case 'category': {\r\n        const dataPoints = processCategorySpendingData(transactions, period);\r\n        return {\r\n          labels: dataPoints.map(point => point.label),\r\n          datasets: [{\r\n            label: 'Spending',\r\n            data: dataPoints.map(point => point.value),\r\n            backgroundColor: dataPoints.map((_, index) => \r\n              Object.values(CHART_COLORS)[index % Object.keys(CHART_COLORS).length]\r\n            ),\r\n            borderColor: dataPoints.map((_, index) => \r\n              Object.values(CHART_COLORS)[index % Object.keys(CHART_COLORS).length]\r\n            ),\r\n          }]\r\n        };\r\n      }\r\n      case 'budget-vs-actual':\r\n        // Budget vs actual is handled by dedicated component\r\n        return { labels: [], datasets: [] };\r\n      default:\r\n        return { labels: [], datasets: [] };\r\n    }\r\n  }, [chartType, transactions, accounts, period]);\r\n\r\n  const chartOptions = useMemo(() => {\r\n    const baseOptions = getBaseOptions(chartType, chartConfig.title);\r\n    return { ...baseOptions, ...customOptions };\r\n  }, [chartType, chartConfig.title, customOptions]);\r\n\r\n  const handleChartClick = (event: any, elements: any[]) => {\r\n    if (elements.length > 0 && onDataPointClick) {\r\n      const dataIndex = elements[0].index;\r\n      const datasetIndex = elements[0].datasetIndex;\r\n      \r\n      // Get the appropriate data point based on chart type\r\n      let dataPoint: any;\r\n      switch (chartType) {\r\n        case 'balance':\r\n          dataPoint = processBalanceTrendData(transactions, accounts, period)[dataIndex];\r\n          break;\r\n        case 'income-expense':\r\n          const { income, expenses } = processIncomeExpenseData(transactions, period);\r\n          dataPoint = datasetIndex === 0 ? income[dataIndex] : expenses[dataIndex];\r\n          dataPoint.type = datasetIndex === 0 ? 'income' : 'expense';\r\n          break;\r\n        case 'category':\r\n          dataPoint = processCategorySpendingData(transactions, period)[dataIndex];\r\n          break;\r\n        default:\r\n          dataPoint = null;\r\n      }\r\n      \r\n      if (dataPoint) {\r\n        onDataPointClick(dataPoint, chartType);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Special handling for budget vs actual chart\r\n  if (chartType === 'budget-vs-actual') {\r\n    return (\r\n      <BudgetVsActualChart\r\n        budgets={budgets}\r\n        transactions={transactions}\r\n        period={period}\r\n        height={height}\r\n        className={className}\r\n        onDataPointClick={(dataPoint) => onDataPointClick?.(dataPoint, chartType)}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={`bg-white rounded-lg shadow-sm border p-6 ${className}`}>\r\n        <div className=\"animate-pulse\">\r\n          <div className=\"h-4 bg-gray-200 rounded w-1/4 mb-4\"></div>\r\n          <div className=\"h-64 bg-gray-200 rounded\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={`bg-white rounded-lg shadow-sm border p-6 ${className}`}>\r\n        <div className=\"text-center text-red-600\">\r\n          <p>Error loading chart: {error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`bg-white rounded-lg shadow-sm border p-6 ${className}`}>\r\n      <BaseChart\r\n        type={getChartType(chartType)}\r\n        data={chartData}\r\n        options={chartOptions}\r\n        height={height}\r\n        width=\"100%\"\r\n        onChartClick={handleChartClick}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper functions\r\nconst getChartConfig = (chartType: ChartType, period: TimePeriod): { title: string; description: string } => {\r\n  const periodText = period.charAt(0).toUpperCase() + period.slice(1);\r\n  \r\n  switch (chartType) {\r\n    case 'balance':\r\n      return {\r\n        title: 'Balance Trend',\r\n        description: `Shows your account balance over the ${period} period`\r\n      };\r\n    case 'income-expense':\r\n      return {\r\n        title: 'Income vs Expenses',\r\n        description: `Compares your income and expenses for the ${period}`\r\n      };\r\n    case 'category':\r\n      return {\r\n        title: 'Spending by Category',\r\n        description: `Breakdown of your spending by category for the ${period}`\r\n      };\r\n    case 'budget-vs-actual':\r\n      return {\r\n        title: 'Budget vs Actual',\r\n        description: `Shows how your spending compares to your budget for the ${period}`\r\n      };\r\n    default:\r\n      return {\r\n        title: 'Chart',\r\n        description: 'Financial data visualization'\r\n      };\r\n  }\r\n};\r\n\r\nconst getChartType = (chartType: ChartType): 'line' | 'bar' | 'doughnut' | 'pie' => {\r\n  switch (chartType) {\r\n    case 'balance':\r\n      return 'line';\r\n    case 'income-expense':\r\n      return 'bar';\r\n    case 'category':\r\n      return 'doughnut';\r\n    case 'budget-vs-actual':\r\n      return 'bar';\r\n    default:\r\n      return 'line';\r\n  }\r\n};\r\n\r\nconst getBaseOptions = (chartType: ChartType, title: string) => {\r\n  const baseOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n         plugins: {\r\n       title: {\r\n         display: false,\r\n       },\r\n      legend: {\r\n        position: 'bottom' as const,\r\n        labels: {\r\n          usePointStyle: true,\r\n          padding: 20,\r\n          font: {\r\n            size: 12,\r\n          },\r\n          color: '#374151',\r\n        },\r\n      },\r\n      tooltip: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        titleColor: '#fff',\r\n        bodyColor: '#fff',\r\n        borderColor: '#374151',\r\n        borderWidth: 1,\r\n        cornerRadius: 8,\r\n        displayColors: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  // Add chart-specific options\r\n  switch (chartType) {\r\n    case 'balance':\r\n      return {\r\n        ...baseOptions,\r\n        scales: {\r\n          y: {\r\n            ticks: {\r\n              callback: function(value: any) {\r\n                return '$' + value.toLocaleString();\r\n              },\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          ...baseOptions.plugins,\r\n          tooltip: {\r\n            ...baseOptions.plugins.tooltip,\r\n            callbacks: {\r\n              label: function(context: any) {\r\n                const value = context.parsed.y;\r\n                return `Balance: $${value.toLocaleString()}`;\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n    case 'income-expense':\r\n      return {\r\n        ...baseOptions,\r\n        scales: {\r\n          x: {\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n            grid: {\r\n              color: 'rgba(0, 0, 0, 0.1)',\r\n            },\r\n            ticks: {\r\n              callback: function(value: any) {\r\n                return '$' + value.toLocaleString();\r\n              },\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          ...baseOptions.plugins,\r\n          tooltip: {\r\n            ...baseOptions.plugins.tooltip,\r\n            callbacks: {\r\n              label: function(context: any) {\r\n                const label = context.dataset.label || '';\r\n                const value = context.parsed.y;\r\n                return `${label}: $${value.toLocaleString()}`;\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n    case 'category':\r\n      return {\r\n        ...baseOptions,\r\n        plugins: {\r\n          ...baseOptions.plugins,\r\n          legend: {\r\n            position: 'right' as const,\r\n            labels: {\r\n              usePointStyle: true,\r\n              padding: 15,\r\n              font: {\r\n                size: 11,\r\n              },\r\n            },\r\n          },\r\n          tooltip: {\r\n            ...baseOptions.plugins.tooltip,\r\n            callbacks: {\r\n              label: function(context: any) {\r\n                const label = context.label || '';\r\n                const value = context.parsed;\r\n                const total = context.dataset.data.reduce((a: number, b: number) => a + b, 0);\r\n                const percentage = ((value / total) * 100).toFixed(1);\r\n                return `${label}: $${value.toLocaleString()} (${percentage}%)`;\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return baseOptions;\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}