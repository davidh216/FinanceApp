{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{getDoc,setDoc}from'firebase/firestore';import{signInWithGoogle,signOutUser,onAuthStateChange,getUserDocRef}from'../config/firebase';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[firebaseUser,setFirebaseUser]=useState(null);const[loading,setLoading]=useState(true);// Convert Firebase user to our User type\nconst convertFirebaseUserToUser=firebaseUser=>{return{id:firebaseUser.uid,email:firebaseUser.email||'',name:firebaseUser.displayName||'',phone:firebaseUser.phoneNumber||undefined,avatar:firebaseUser.photoURL||undefined,bio:'',isActive:true,createdAt:firebaseUser.metadata.creationTime||new Date().toISOString(),updatedAt:firebaseUser.metadata.lastSignInTime||new Date().toISOString()};};// Create or update user document in Firestore\nconst createOrUpdateUserDocument=async firebaseUser=>{const userRef=getUserDocRef(firebaseUser.uid);const userSnap=await getDoc(userRef);if(!userSnap.exists()){// Create new user document\nconst userData=convertFirebaseUserToUser(firebaseUser);await setDoc(userRef,userData);return userData;}else{// Update existing user document\nconst userData=userSnap.data();const updatedUserData={...userData,email:firebaseUser.email||userData.email,name:firebaseUser.displayName||userData.name,phone:firebaseUser.phoneNumber||userData.phone,avatar:firebaseUser.photoURL||userData.avatar,updatedAt:new Date().toISOString()};await setDoc(userRef,updatedUserData);return updatedUserData;}};// Handle authentication state changes\nuseEffect(()=>{const unsubscribe=onAuthStateChange(async firebaseUser=>{setFirebaseUser(firebaseUser);if(firebaseUser){try{const userData=await createOrUpdateUserDocument(firebaseUser);setCurrentUser(userData);}catch(error){console.error('Error creating/updating user document:',error);// Fallback to basic user data\nsetCurrentUser(convertFirebaseUserToUser(firebaseUser));}}else{setCurrentUser(null);}setLoading(false);});return unsubscribe;},[]);// Sign in with Google\nconst handleSignInWithGoogle=async()=>{try{setLoading(true);await signInWithGoogle();}catch(error){console.error('Error signing in with Google:',error);throw error;}finally{setLoading(false);}};// Sign out\nconst handleSignOut=async()=>{try{setLoading(true);await signOutUser();setCurrentUser(null);}catch(error){console.error('Error signing out:',error);throw error;}finally{setLoading(false);}};// Update user profile\nconst updateUserProfile=async updates=>{if(!currentUser){throw new Error('No user logged in');}try{const userRef=getUserDocRef(currentUser.id);const updatedUserData={...currentUser,...updates,updatedAt:new Date().toISOString()};await setDoc(userRef,updatedUserData);setCurrentUser(updatedUserData);}catch(error){console.error('Error updating user profile:',error);throw error;}};const value={currentUser,firebaseUser,loading,signInWithGoogle:handleSignInWithGoogle,signOut:handleSignOut,updateUserProfile};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","getDoc","setDoc","signInWithGoogle","signOutUser","onAuthStateChange","getUserDocRef","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","currentUser","setCurrentUser","firebaseUser","setFirebaseUser","loading","setLoading","convertFirebaseUserToUser","id","uid","email","name","displayName","phone","phoneNumber","undefined","avatar","photoURL","bio","isActive","createdAt","metadata","creationTime","Date","toISOString","updatedAt","lastSignInTime","createOrUpdateUserDocument","userRef","userSnap","exists","userData","data","updatedUserData","unsubscribe","error","console","handleSignInWithGoogle","handleSignOut","updateUserProfile","updates","value","signOut","Provider"],"sources":["C:/Users/X2DHHWAN/Desktop/Finance-App/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { User as FirebaseUser } from 'firebase/auth';\r\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\r\nimport { auth, db, signInWithGoogle, signOutUser, onAuthStateChange, getUserDocRef } from '../config/firebase';\r\nimport { User } from '../types/financial';\r\n\r\ninterface AuthContextType {\r\n  currentUser: User | null;\r\n  firebaseUser: FirebaseUser | null;\r\n  loading: boolean;\r\n  signInWithGoogle: () => Promise<void>;\r\n  signOut: () => Promise<void>;\r\n  updateUserProfile: (updates: Partial<User>) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n  const [firebaseUser, setFirebaseUser] = useState<FirebaseUser | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Convert Firebase user to our User type\r\n  const convertFirebaseUserToUser = (firebaseUser: FirebaseUser): User => {\r\n    return {\r\n      id: firebaseUser.uid,\r\n      email: firebaseUser.email || '',\r\n      name: firebaseUser.displayName || '',\r\n      phone: firebaseUser.phoneNumber || undefined,\r\n      avatar: firebaseUser.photoURL || undefined,\r\n      bio: '',\r\n      isActive: true,\r\n      createdAt: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n      updatedAt: firebaseUser.metadata.lastSignInTime || new Date().toISOString(),\r\n    };\r\n  };\r\n\r\n  // Create or update user document in Firestore\r\n  const createOrUpdateUserDocument = async (firebaseUser: FirebaseUser) => {\r\n    const userRef = getUserDocRef(firebaseUser.uid);\r\n    const userSnap = await getDoc(userRef);\r\n\r\n    if (!userSnap.exists()) {\r\n      // Create new user document\r\n      const userData = convertFirebaseUserToUser(firebaseUser);\r\n      await setDoc(userRef, userData);\r\n      return userData;\r\n    } else {\r\n      // Update existing user document\r\n      const userData = userSnap.data() as User;\r\n      const updatedUserData = {\r\n        ...userData,\r\n        email: firebaseUser.email || userData.email,\r\n        name: firebaseUser.displayName || userData.name,\r\n        phone: firebaseUser.phoneNumber || userData.phone,\r\n        avatar: firebaseUser.photoURL || userData.avatar,\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      await setDoc(userRef, updatedUserData);\r\n      return updatedUserData;\r\n    }\r\n  };\r\n\r\n  // Handle authentication state changes\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChange(async (firebaseUser) => {\r\n      setFirebaseUser(firebaseUser);\r\n      \r\n      if (firebaseUser) {\r\n        try {\r\n          const userData = await createOrUpdateUserDocument(firebaseUser);\r\n          setCurrentUser(userData);\r\n        } catch (error) {\r\n          console.error('Error creating/updating user document:', error);\r\n          // Fallback to basic user data\r\n          setCurrentUser(convertFirebaseUserToUser(firebaseUser));\r\n        }\r\n      } else {\r\n        setCurrentUser(null);\r\n      }\r\n      \r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  // Sign in with Google\r\n  const handleSignInWithGoogle = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      console.error('Error signing in with Google:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Sign out\r\n  const handleSignOut = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await signOutUser();\r\n      setCurrentUser(null);\r\n    } catch (error) {\r\n      console.error('Error signing out:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update user profile\r\n  const updateUserProfile = async (updates: Partial<User>) => {\r\n    if (!currentUser) {\r\n      throw new Error('No user logged in');\r\n    }\r\n\r\n    try {\r\n      const userRef = getUserDocRef(currentUser.id);\r\n      const updatedUserData = {\r\n        ...currentUser,\r\n        ...updates,\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      \r\n      await setDoc(userRef, updatedUserData);\r\n      setCurrentUser(updatedUserData);\r\n    } catch (error) {\r\n      console.error('Error updating user profile:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    currentUser,\r\n    firebaseUser,\r\n    loading,\r\n    signInWithGoogle: handleSignInWithGoogle,\r\n    signOut: handleSignOut,\r\n    updateUserProfile,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}