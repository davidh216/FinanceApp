{"version":3,"file":"static/js/66.43fb39a9.chunk.js","mappings":"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","sources":["components/ui/VirtualizedTransactionList.tsx","components/dashboard/RecentActivity.tsx","components/ui/TransactionItem.tsx"],"sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\r\nimport { FixedSizeList as List } from 'react-window';\r\nimport { Transaction } from '../../types/financial';\r\nimport { TransactionItem } from './TransactionItem';\r\nimport { Button } from './Button';\r\nimport { Search, Filter, SortAsc, SortDesc } from 'lucide-react';\r\n\r\ninterface VirtualizedTransactionListProps {\r\n  transactions: Transaction[];\r\n  height?: number;\r\n  itemHeight?: number;\r\n  className?: string;\r\n  onTransactionClick?: (transaction: Transaction) => void;\r\n  loading?: boolean;\r\n  error?: string | null;\r\n}\r\n\r\ninterface SortConfig {\r\n  key: keyof Transaction;\r\n  direction: 'asc' | 'desc';\r\n}\r\n\r\nexport const VirtualizedTransactionList: React.FC<VirtualizedTransactionListProps> = ({\r\n  transactions,\r\n  height = 400,\r\n  itemHeight = 72,\r\n  className = '',\r\n  onTransactionClick,\r\n  loading = false,\r\n  error = null,\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortConfig, setSortConfig] = useState<SortConfig>({ key: 'date', direction: 'desc' });\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [categoryFilter, setCategoryFilter] = useState<string>('all');\r\n  const [amountFilter, setAmountFilter] = useState<string>('all');\r\n\r\n  // Get unique categories for filter\r\n  const categories = useMemo(() => {\r\n    const uniqueCategories = [...new Set(transactions.map(tx => tx.category))];\r\n    return ['all', ...uniqueCategories.sort()];\r\n  }, [transactions]);\r\n\r\n  // Filter and sort transactions\r\n  const filteredAndSortedTransactions = useMemo(() => {\r\n    let filtered = transactions.filter(transaction => {\r\n      // Search filter\r\n      const matchesSearch = searchTerm === '' || \r\n        transaction.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        transaction.category.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n      // Category filter\r\n      const matchesCategory = categoryFilter === 'all' || transaction.category === categoryFilter;\r\n\r\n      // Amount filter\r\n      let matchesAmount = true;\r\n      if (amountFilter === 'income') {\r\n        matchesAmount = transaction.amount > 0;\r\n      } else if (amountFilter === 'expense') {\r\n        matchesAmount = transaction.amount < 0;\r\n      }\r\n\r\n      return matchesSearch && matchesCategory && matchesAmount;\r\n    });\r\n\r\n    // Sort transactions\r\n    filtered.sort((a, b) => {\r\n      const aValue = a[sortConfig.key];\r\n      const bValue = b[sortConfig.key];\r\n\r\n      if (typeof aValue === 'string' && typeof bValue === 'string') {\r\n        const comparison = aValue.localeCompare(bValue);\r\n        return sortConfig.direction === 'asc' ? comparison : -comparison;\r\n      }\r\n\r\n      if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n        const comparison = aValue - bValue;\r\n        return sortConfig.direction === 'asc' ? comparison : -comparison;\r\n      }\r\n\r\n      if (aValue instanceof Date && bValue instanceof Date) {\r\n        const comparison = aValue.getTime() - bValue.getTime();\r\n        return sortConfig.direction === 'asc' ? comparison : -comparison;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n\r\n    return filtered;\r\n  }, [transactions, searchTerm, sortConfig, categoryFilter, amountFilter]);\r\n\r\n  // Handle sort\r\n  const handleSort = useCallback((key: keyof Transaction) => {\r\n    setSortConfig(prev => ({\r\n      key,\r\n      direction: prev.key === key && prev.direction === 'asc' ? 'desc' : 'asc'\r\n    }));\r\n  }, []);\r\n\r\n  // Render individual transaction item\r\n  const renderTransactionItem = useCallback(({ index, style }: { index: number; style: React.CSSProperties }) => {\r\n    const transaction = filteredAndSortedTransactions[index];\r\n    if (!transaction) return null;\r\n\r\n    return (\r\n      <div style={style}>\r\n        <TransactionItem\r\n          transaction={transaction}\r\n          onClick={() => onTransactionClick?.(transaction)}\r\n          className=\"border-b border-gray-100 last:border-b-0\"\r\n        />\r\n      </div>\r\n    );\r\n  }, [filteredAndSortedTransactions, onTransactionClick]);\r\n\r\n  // Loading state\r\n  if (loading) {\r\n    return (\r\n      <div className={`bg-white rounded-lg shadow-sm border ${className}`}>\r\n        <div className=\"p-4\">\r\n          <div className=\"animate-pulse space-y-3\">\r\n            {Array.from({ length: 5 }).map((_, i) => (\r\n              <div key={i} className=\"flex items-center space-x-3\">\r\n                <div className=\"w-12 h-12 bg-gray-200 rounded-full\"></div>\r\n                <div className=\"flex-1 space-y-2\">\r\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\r\n                  <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\r\n                </div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-20\"></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <div className={`bg-white rounded-lg shadow-sm border ${className}`}>\r\n        <div className=\"p-4 text-center text-red-600\">\r\n          <p>Error loading transactions: {error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`bg-white rounded-lg shadow-sm border ${className}`}>\r\n      {/* Header with search and filters */}\r\n      <div className=\"p-4 border-b border-gray-200\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">\r\n            Transactions ({filteredAndSortedTransactions.length})\r\n          </h3>\r\n          <Button\r\n            onClick={() => setShowFilters(!showFilters)}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"flex items-center space-x-2\"\r\n          >\r\n            <Filter className=\"w-4 h-4\" />\r\n            <span>Filters</span>\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Search bar */}\r\n        <div className=\"relative mb-4\">\r\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search transactions...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n          />\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        {showFilters && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Category\r\n              </label>\r\n              <select\r\n                value={categoryFilter}\r\n                onChange={(e) => setCategoryFilter(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                {categories.map(category => (\r\n                  <option key={category} value={category}>\r\n                    {category === 'all' ? 'All Categories' : category}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Amount Type\r\n              </label>\r\n              <select\r\n                value={amountFilter}\r\n                onChange={(e) => setAmountFilter(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"all\">All Transactions</option>\r\n                <option value=\"income\">Income Only</option>\r\n                <option value=\"expense\">Expenses Only</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"flex items-end\">\r\n              <Button\r\n                onClick={() => {\r\n                  setSearchTerm('');\r\n                  setCategoryFilter('all');\r\n                  setAmountFilter('all');\r\n                }}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n              >\r\n                Clear Filters\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Sort controls */}\r\n        <div className=\"flex items-center space-x-4 text-sm\">\r\n          <span className=\"text-gray-600\">Sort by:</span>\r\n          <button\r\n            onClick={() => handleSort('date')}\r\n            className={`flex items-center space-x-1 px-2 py-1 rounded ${\r\n              sortConfig.key === 'date' ? 'bg-blue-100 text-blue-700' : 'text-gray-600 hover:bg-gray-100'\r\n            }`}\r\n          >\r\n            <span>Date</span>\r\n            {sortConfig.key === 'date' && (\r\n              sortConfig.direction === 'asc' ? <SortAsc className=\"w-3 h-3\" /> : <SortDesc className=\"w-3 h-3\" />\r\n            )}\r\n          </button>\r\n          <button\r\n            onClick={() => handleSort('amount')}\r\n            className={`flex items-center space-x-1 px-2 py-1 rounded ${\r\n              sortConfig.key === 'amount' ? 'bg-blue-100 text-blue-700' : 'text-gray-600 hover:bg-gray-100'\r\n            }`}\r\n          >\r\n            <span>Amount</span>\r\n            {sortConfig.key === 'amount' && (\r\n              sortConfig.direction === 'asc' ? <SortAsc className=\"w-3 h-3\" /> : <SortDesc className=\"w-3 h-3\" />\r\n            )}\r\n          </button>\r\n          <button\r\n            onClick={() => handleSort('category')}\r\n            className={`flex items-center space-x-1 px-2 py-1 rounded ${\r\n              sortConfig.key === 'category' ? 'bg-blue-100 text-blue-700' : 'text-gray-600 hover:bg-gray-100'\r\n            }`}\r\n          >\r\n            <span>Category</span>\r\n            {sortConfig.key === 'category' && (\r\n              sortConfig.direction === 'asc' ? <SortAsc className=\"w-3 h-3\" /> : <SortDesc className=\"w-3 h-3\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Virtualized list */}\r\n      {filteredAndSortedTransactions.length === 0 ? (\r\n        <div className=\"p-8 text-center text-gray-500\">\r\n          <p>No transactions found matching your criteria.</p>\r\n        </div>\r\n      ) : (\r\n        <div style={{ height }}>\r\n          <List\r\n            height={height}\r\n            itemCount={filteredAndSortedTransactions.length}\r\n            itemSize={itemHeight}\r\n            width=\"100%\"\r\n          >\r\n            {renderTransactionItem}\r\n          </List>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport { Account } from '../../types/financial';\r\nimport { VirtualizedTransactionList } from '../ui/VirtualizedTransactionList';\r\nimport { Button } from '../ui/Button';\r\nimport { useFinancial } from '../../contexts/FinancialContext';\r\nimport { Eye, Filter, ArrowUpDown } from 'lucide-react';\r\n\r\ninterface RecentActivityProps {\r\n  accounts: Account[];\r\n  limit?: number;\r\n}\r\n\r\nexport const RecentActivity: React.FC<RecentActivityProps> = ({\r\n  accounts,\r\n  limit = 5,\r\n}) => {\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [sortBy, setSortBy] = useState<'date' | 'amount'>('date');\r\n  const { addTag, removeTag, changeScreen } = useFinancial();\r\n\r\n  // Get all transactions from all accounts\r\n  const allTransactions = accounts\r\n    .flatMap(\r\n      (account) =>\r\n        account.transactions?.map((txn) => ({\r\n          ...txn,\r\n          accountName: account.name,\r\n          accountType: account.type,\r\n        })) || []\r\n    )\r\n    .sort((a, b) => {\r\n      if (sortBy === 'date') {\r\n        return new Date(b.date).getTime() - new Date(a.date).getTime();\r\n      } else {\r\n        return Math.abs(b.amount) - Math.abs(a.amount);\r\n      }\r\n    });\r\n\r\n  // Use virtualized list for better performance with large datasets\r\n  const displayTransactions = allTransactions.slice(0, limit);\r\n\r\n  const handleViewAll = () => {\r\n    changeScreen('transactions');\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm border\">\r\n      {/* Header */}\r\n      <div className=\"p-2 border-b border-gray-200\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 text-left\">\r\n              Recent Activity\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            {/* Sort Toggle */}\r\n            <button\r\n              onClick={() => setSortBy(sortBy === 'date' ? 'amount' : 'date')}\r\n              className=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-md transition-colors\"\r\n              title={`Sort by ${sortBy === 'date' ? 'amount' : 'date'}`}\r\n            >\r\n              <ArrowUpDown className=\"w-4 h-4\" />\r\n            </button>\r\n\r\n            {/* Filter Toggle */}\r\n            <button\r\n              onClick={() => setShowFilters(!showFilters)}\r\n              className={`p-2 rounded-md transition-colors ${\r\n                showFilters\r\n                  ? 'text-blue-600 bg-blue-50'\r\n                  : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n              }`}\r\n              title=\"Toggle filters\"\r\n            >\r\n              <Filter className=\"w-4 h-4\" />\r\n            </button>\r\n\r\n            {/* View All Button */}\r\n            <Button\r\n              leftIcon={<Eye className=\"w-4 h-4\" />}\r\n              size=\"sm\"\r\n              variant=\"outline\"\r\n              onClick={handleViewAll}\r\n            >\r\n              View All\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Quick Filters */}\r\n        {showFilters && (\r\n          <div className=\"flex items-center space-x-4 p-2 bg-gray-50 rounded-lg\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <label className=\"text-sm font-medium text-gray-700\">Type:</label>\r\n              <select className=\"text-sm border border-gray-300 rounded px-2 py-1\">\r\n                <option value=\"\">All</option>\r\n                <option value=\"income\">Income</option>\r\n                <option value=\"expense\">Expense</option>\r\n                <option value=\"pending\">Pending</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <label className=\"text-sm font-medium text-gray-700\">\r\n                Account:\r\n              </label>\r\n              <select className=\"text-sm border border-gray-300 rounded px-2 py-1\">\r\n                <option value=\"\">All Accounts</option>\r\n                {accounts.map((account) => (\r\n                  <option key={account.id} value={account.id}>\r\n                    {account.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Transaction List */}\r\n      {allTransactions.length === 0 ? (\r\n        <div className=\"p-6 text-center text-gray-500\">\r\n          <div className=\"w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <span className=\"text-2xl\">📋</span>\r\n          </div>\r\n          <p className=\"text-sm\">No recent transactions found</p>\r\n          <p className=\"text-xs text-gray-400 mt-1\">\r\n            Transactions will appear here once you connect accounts\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <VirtualizedTransactionList\r\n          transactions={displayTransactions}\r\n          height={400}\r\n          itemHeight={72}\r\n          onTransactionClick={(transaction) => {\r\n            // Handle transaction click - could open detail modal or navigate\r\n            console.log('Transaction clicked:', transaction);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Footer */}\r\n      {allTransactions.length > 0 && (\r\n        <div className=\"p-2 bg-gray-50 border-t\">\r\n          <div className=\"flex items-center justify-between text-sm\">\r\n            <div className=\"text-gray-500\">\r\n              Showing {displayTransactions.length} of {allTransactions.length} total transactions\r\n            </div>\r\n            <button\r\n              onClick={handleViewAll}\r\n              className=\"text-blue-600 hover:text-blue-800 font-medium\"\r\n            >\r\n              View all transactions →\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Transaction } from '../../types/financial';\r\nimport { TAG_CATEGORIES } from '../../constants/financial';\r\nimport { useFinancial } from '../../contexts/FinancialContext';\r\n\r\ninterface TransactionItemProps {\r\n  transaction: Transaction;\r\n  onAddTag?: (transactionId: string, tag: string) => void;\r\n  onRemoveTag?: (transactionId: string, tag: string) => void;\r\n  showAccountName?: boolean;\r\n  showTagging?: boolean;\r\n  className?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport const TransactionItem = React.memo<TransactionItemProps>(({\r\n  transaction,\r\n  onAddTag,\r\n  onRemoveTag,\r\n  showAccountName = false,\r\n  showTagging = true,\r\n  className = '',\r\n  onClick,\r\n}) => {\r\n  const { isPrivacyMode } = useFinancial();\r\n  const [showTagDropdown, setShowTagDropdown] = useState(false);\r\n\r\n  const handleAddTag = (tagName: string) => {\r\n    if (onAddTag && !transaction.tags.includes(tagName)) {\r\n      onAddTag(transaction.id, tagName);\r\n      setShowTagDropdown(false);\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (tagName: string) => {\r\n    if (onRemoveTag) {\r\n      onRemoveTag(transaction.id, tagName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`p-2 hover:bg-gray-50 transition-colors cursor-pointer ${className}`}\r\n      onClick={onClick}\r\n    >\r\n      <div className=\"grid grid-cols-4 gap-4 items-center\">\r\n        {/* Column 1: Merchant Name - Left aligned */}\r\n        <div className=\"min-w-0 text-left\">\r\n          <div className=\"font-medium text-gray-900 truncate text-sm\">\r\n            {transaction.cleanMerchant.cleanName}\r\n          </div>\r\n          <div className=\"text-xs text-gray-500 truncate\">\r\n            {transaction.cleanMerchant.original}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Column 2: Date and Account */}\r\n        <div className=\"min-w-0\">\r\n          <div className=\"text-sm text-gray-900\">{transaction.date}</div>\r\n          <div className=\"text-xs text-gray-500\">\r\n            {showAccountName ? transaction.accountId : ''}\r\n            {transaction.pending && (\r\n              <span className=\"ml-2 px-1.5 py-0.5 text-xs bg-yellow-100 text-yellow-800 rounded-full\">\r\n                Pending\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Column 3: Tags */}\r\n        {showTagging && (\r\n          <div className=\"flex items-center space-x-1 flex-wrap\">\r\n            {transaction.tags.map((tag) => {\r\n              const tagInfo = TAG_CATEGORIES[tag];\r\n              return (\r\n                <span\r\n                  key={tag}\r\n                  className={`inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium group cursor-pointer ${\r\n                    tagInfo?.color || 'bg-gray-100 text-gray-800'\r\n                  }`}\r\n                >\r\n                  <span className=\"mr-1\">{tagInfo?.icon || '📝'}</span>\r\n                  {tag}\r\n                  <button\r\n                    onClick={() => handleRemoveTag(tag)}\r\n                    className=\"ml-1 text-current hover:text-red-600 opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </span>\r\n              );\r\n            })}\r\n\r\n            {/* Add Tag Button */}\r\n            <div className=\"relative\">\r\n              <button\r\n                onClick={() => setShowTagDropdown(!showTagDropdown)}\r\n                className=\"inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-600 hover:bg-gray-200 transition-colors\"\r\n              >\r\n                + Tag\r\n              </button>\r\n\r\n              {/* Tag Dropdown */}\r\n              {showTagDropdown && (\r\n                <div className=\"absolute top-full left-0 mt-1 w-48 bg-white border border-gray-200 rounded-md shadow-lg z-10\">\r\n                  <div className=\"p-2 max-h-48 overflow-y-auto\">\r\n                    {Object.entries(TAG_CATEGORIES).map(\r\n                      ([tagName, tagInfo]) => (\r\n                        <button\r\n                          key={tagName}\r\n                          onClick={() => handleAddTag(tagName)}\r\n                          className=\"w-full flex items-center px-2 py-1.5 text-xs rounded hover:bg-gray-50 text-left disabled:opacity-50\"\r\n                          disabled={transaction.tags.includes(tagName)}\r\n                        >\r\n                          <span className=\"mr-2\">{tagInfo.icon}</span>\r\n                          <span\r\n                            className={\r\n                              transaction.tags.includes(tagName)\r\n                                ? 'text-gray-400'\r\n                                : 'text-gray-700'\r\n                            }\r\n                          >\r\n                            {tagName}\r\n                          </span>\r\n                          {transaction.tags.includes(tagName) && (\r\n                            <span className=\"ml-auto text-gray-400\">✓</span>\r\n                          )}\r\n                        </button>\r\n                      )\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Auto-suggest tag if untagged */}\r\n            {transaction.tags.length === 0 &&\r\n              transaction.cleanMerchant.suggestedCategory !== 'Other' && (\r\n                <button\r\n                  onClick={() =>\r\n                    handleAddTag(transaction.cleanMerchant.suggestedCategory)\r\n                  }\r\n                  className=\"inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-blue-50 text-blue-700 hover:bg-blue-100 transition-colors\"\r\n                >\r\n                  <span className=\"mr-1\">\r\n                    {\r\n                      TAG_CATEGORIES[\r\n                        transaction.cleanMerchant.suggestedCategory\r\n                      ]?.icon\r\n                    }\r\n                  </span>\r\n                  Suggest: {transaction.cleanMerchant.suggestedCategory}\r\n                </button>\r\n              )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Column 4: Amount */}\r\n        <div className=\"text-right\">\r\n          <div\r\n            className={`text-sm font-semibold ${\r\n              transaction.amount > 0 ? 'text-green-600' : 'text-red-600'\r\n            }`}\r\n          >\r\n            {isPrivacyMode ? (\r\n              <span className=\"text-gray-400\">••••••</span>\r\n            ) : (\r\n              <>\r\n                {transaction.amount > 0 ? '+' : ''}$\r\n                {Math.abs(transaction.amount).toLocaleString('en-US', {\r\n                  minimumFractionDigits: 2,\r\n                })}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}, (prevProps, nextProps) => {\r\n  // Custom comparison for transaction item props\r\n  return prevProps.transaction.id === nextProps.transaction.id &&\r\n         prevProps.transaction.amount === nextProps.transaction.amount &&\r\n         prevProps.transaction.tags.length === nextProps.transaction.tags.length &&\r\n         prevProps.showAccountName === nextProps.showAccountName &&\r\n         prevProps.showTagging === nextProps.showTagging &&\r\n         prevProps.className === nextProps.className;\r\n});\r\n\r\nTransactionItem.displayName = 'TransactionItem';\r\n"],"names":["VirtualizedTransactionList","_ref","transactions","height","itemHeight","className","onTransactionClick","loading","error","searchTerm","setSearchTerm","useState","sortConfig","setSortConfig","key","direction","showFilters","setShowFilters","categoryFilter","setCategoryFilter","amountFilter","setAmountFilter","categories","useMemo","Set","map","tx","category","sort","filteredAndSortedTransactions","filtered","filter","transaction","matchesSearch","description","toLowerCase","includes","matchesCategory","matchesAmount","amount","a","b","aValue","bValue","comparison","localeCompare","Date","getTime","handleSort","useCallback","prev","renderTransactionItem","_ref2","index","style","_jsx","children","TransactionItem","onClick","Array","from","length","_","i","_jsxs","Button","variant","size","Filter","Search","type","placeholder","value","onChange","e","target","SortAsc","SortDesc","List","itemCount","itemSize","width","RecentActivity","accounts","limit","sortBy","setSortBy","addTag","removeTag","changeScreen","useFinancial","allTransactions","flatMap","account","_account$transactions","txn","accountName","name","accountType","date","Math","abs","displayTransactions","slice","handleViewAll","title","ArrowUpDown","leftIcon","Eye","id","console","log","React","_TAG_CATEGORIES$trans","onAddTag","onRemoveTag","showAccountName","showTagging","isPrivacyMode","showTagDropdown","setShowTagDropdown","handleAddTag","tagName","tags","cleanMerchant","cleanName","original","accountId","pending","tag","tagInfo","TAG_CATEGORIES","color","icon","handleRemoveTag","Object","entries","disabled","suggestedCategory","_Fragment","toLocaleString","minimumFractionDigits","prevProps","nextProps","displayName"],"sourceRoot":""}